{"meta":{"title":"HermitLSR'Blog","subtitle":null,"description":"wubba labba dub dub","author":"hermitlsr","url":"https://www.hermitlsr.top","root":"/"},"pages":[{"title":"所有分类","date":"2021-06-08T06:53:06.287Z","updated":"2021-06-08T06:53:06.287Z","comments":true,"path":"categories/index.html","permalink":"https://www.hermitlsr.top/categories/index.html","excerpt":"","text":""},{"title":"","date":"2021-07-13T05:05:02.954Z","updated":"2021-07-13T05:05:02.954Z","comments":true,"path":"about/index.html","permalink":"https://www.hermitlsr.top/about/index.html","excerpt":"","text":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 本是性乖张，何不就张狂。天地自无我，云裂薄青光。星月皆失色，影断烛梦长。笑我痴，恨我狂，什么儿郎？任清风载月，醉烂柯石旁。&nbsp;&nbsp;--丁酉年 夏 &nbsp; 目前尚在求学中 大二时突然发现喜欢编程，一发不可收拾 热衷统计学习 想去CV、NLP和Data mining卷一卷 闲的时候看书下棋，偶尔骑个车 建站历史 2021.07.13使用 hexo-abbrlink 插件生成永久链接，对部分文章添加了 group。2021.07.11加入朋友圈页面，去掉了花里胡哨的样式，平平淡淡挺好。2021.07.03公安备案完成；加入公告栏时钟。建站伊始参见：Volantis 建站记录"},{"title":"","date":"2021-06-28T05:35:32.971Z","updated":"2021-06-28T05:35:32.971Z","comments":true,"path":"friends/index.html","permalink":"https://www.hermitlsr.top/friends/index.html","excerpt":"名 人 堂人生到处知何似，应似飞鸿踏雪泥。泥上偶然留指爪，鸿飞哪复计东西。","text":"名 人 堂人生到处知何似，应似飞鸿踏雪泥。泥上偶然留指爪，鸿飞哪复计东西。 📋 友链占坑流程 📋🔔 友链占坑须知 🔔 首先：将本站加入贵站友链 名称: HermitLSR’s Blog链接：https://hermitlsr.top头像：https://cdn.jsdelivr.net/gh/hermitlsr/image-for-hermitlsr.top/web/rickavatar.png网站截图：https://cdn.jsdelivr.net/gh/hermitlsr/image-for-hermitlsr.top/background/blog-screen.png描述：日常笔记，技术博客，钟爱统计学习 其次：使用Github，新建Issues，按照如下格式填写并提交 12345678&#123; &quot;title&quot;: &quot;博客名称&quot;, &quot;description&quot;: &quot;描述&quot;, &quot;screenshot&quot;: &quot;博客截图外链&quot;, &quot;url&quot;: &quot;博客站点链接&quot;, &quot;avatar&quot;: &quot;站主头像外链&quot;, &quot;group&quot;: &quot;小伙伴们&quot;&#125;注意事项“title”, “avatar”, “url” 为必选项，同时，强烈建议提供&quot;screenshot&quot;。尽量使用 1MB 以下的图片(否则请点我进行图片压缩)，上传至自己搭建的图床或去不图床，并使用此链接作为图片链接。通过自己创建的Issue，可以自行修改上述内容。待通过后刷新即可显示友链。若实在不知如何创建请点击👇 对，就是点这：我实在无法使用GitHub Issue 方式创建友链 在下方评论区留言上述内容，等待博主审核添加。但注意使用此种方法修改内容将比较麻烦，需要每次向博主提交修改内容。所以，再次强烈建议使用Github Issues的方式自行添加友链，等待审核即可。 ✔️ 交换友链的前提是互相了解，最好能够有所交流✔️ ❗不接受任何非博客类网站(资源站、视频站等)交换友链❗ ❗网站不应有繁杂的广告、推广信息或者违规违法的内容❗ ❗确保自己的站点能够正常访问，无法访问的链接将转移到&quot;失踪人口&quot;分类，超过半月后将彻底清理❗ ❤️ 如果能够自行通过Github Issues 添加友链，请及时联系博主删除旧链❤️ 🍭 博主不介意单向友链，尤其是大佬的博客 🍭"},{"title":"","date":"2021-05-27T10:02:54.000Z","updated":"2021-07-03T08:35:20.400Z","comments":true,"path":"messages/index.html","permalink":"https://www.hermitlsr.top/messages/index.html","excerpt":"","text":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 每到驿亭先下马，循墙绕柱觅君诗 留言板 jinrishici.load(function(result) { var sentence = document.querySelector(\"#poem\") var info_in = document.querySelector(\"#info\") sentence.innerHTML = result.data.content info_in.innerHTML = '【' + result.data.origin.dynasty + '】' + result.data.origin.author + '《' + result.data.origin.title + '》' }); 欢迎来到本站，这是一个简单的留言界面，回复时尽量带上邮箱，可使用Github账号登录 1.本站是在下学习记录网站，若站中内容对君有所帮助，荣幸之至 2.博客文章如若有错漏，失效之处，请君言告，在下感激万分 3.若有交换友链意向，请看友链 &emsp;"},{"title":"所有标签","date":"2021-06-08T06:53:06.283Z","updated":"2021-06-08T06:53:06.283Z","comments":true,"path":"tags/index.html","permalink":"https://www.hermitlsr.top/tags/index.html","excerpt":"","text":""},{"title":"","date":"2021-05-31T06:41:36.000Z","updated":"2021-06-05T16:23:53.599Z","comments":true,"path":"technique/index.html","permalink":"https://www.hermitlsr.top/technique/index.html","excerpt":"","text":"值得收藏的点子"},{"title":"","date":"2021-05-19T08:15:33.000Z","updated":"2021-06-25T09:46:28.516Z","comments":false,"path":"write/index.html","permalink":"https://www.hermitlsr.top/write/index.html","excerpt":"","text":"胡言乱语 2021.06.15 雾里藏都人几许，他乡桂诗换酒钱。求学子过完毕业典礼该回家了。 2021.06.04 考了两辆车终于把科三过了，我终于知道马路杀手都是怎么拿到证的了。 2021.05.28 好像我也是拥有jk女孩的男人了。 2021.05.27 拍毕业照了，离毕业又进一步。 2021.05.26 提前毕业的老唐兄弟回来了，五个人恰了一顿猪肚鸡好奢侈。 2021.05.21 今天结识了一位郎小主，非常nice，期待学习到更多东西（偷偷回来写的 😝 ）。 2021.05.19 有时间搞个人博客了，作为没有服务器和技术的小白就从静态博客开始吧，感谢HEXO。"},{"title":"","date":"2021-07-02T13:22:38.663Z","updated":"2021-07-02T13:22:38.663Z","comments":true,"path":"game/2048/index.html","permalink":"https://www.hermitlsr.top/game/2048/index.html","excerpt":"","text":"//禁止页面选择以及鼠标右键 document.οncοntextmenu=function(){return false;}; document.onselectstart=function(){return false;}; let h = window.innerHeight; let w = window.innerWidth; //禁用右键 document.oncontextmenu = function () { return false; }; //在本网页的任何键盘敲击事件都是无效操作 （防止F12和shift+ctrl+i调起开发者工具） window.onkeydown = window.onkeyup = window.onkeypress = function () { window.event.returnValue = false; return false; } //禁用开发者工具F12 document.onkeydown = function () { if (window.event && window.event.keyCode == 123) { event.keyCode = 0; event.returnValue = false; return false; } }; // //如果用户在工具栏调起开发者工具，那么判断浏览器的可视高度和可视宽度是否有改变，如有改变则关闭本页面 // window.onresize = function () { // if (h != window.innerHeight || w != window.innerWidth) { // window.close(); // window.location = \"about:blank\"; // } // } 2048 2048 0 0 将数字加起来达到 2048 ! 新的游戏 继续 再来一次 重载游戏 返回列表"},{"title":"","date":"2021-07-02T13:22:38.658Z","updated":"2021-07-02T13:22:38.658Z","comments":true,"path":"game/catch-cat-master/index.html","permalink":"https://www.hermitlsr.top/game/catch-cat-master/index.html","excerpt":"","text":"//禁止页面选择以及鼠标右键 document.οncοntextmenu=function(){return false;}; document.onselectstart=function(){return false;}; let h = window.innerHeight; let w = window.innerWidth; //禁用右键 document.oncontextmenu = function () { return false; }; //在本网页的任何键盘敲击事件都是无效操作 （防止F12和shift+ctrl+i调起开发者工具） window.onkeydown = window.onkeyup = window.onkeypress = function () { window.event.returnValue = false; return false; } //禁用开发者工具F12 document.onkeydown = function () { if (window.event && window.event.keyCode == 123) { event.keyCode = 0; event.returnValue = false; return false; } }; // //如果用户在工具栏调起开发者工具，那么判断浏览器的可视高度和可视宽度是否有改变，如有改变则关闭本页面 // window.onresize = function () { // if (h != window.innerHeight || w != window.innerWidth) { // window.close(); // window.location = \"about:blank\"; // } // } Catch The Cat * { padding: 0; margin: 0 } body { background-color: #eeeeee; } #catch-the-cat { width: 100%; margin-top: 32px; text-align: center; } window.game = new CatchTheCatGame({ w: 11, h: 11, r: 20, backgroundColor: 0xffffff, parent: 'catch-the-cat', statusBarAlign: 'center', credit: '抓小猫' }); 重载游戏 返回列表"},{"title":"","date":"2021-07-02T15:34:27.861Z","updated":"2021-07-02T15:34:27.861Z","comments":true,"path":"game/tk-battle-old/index.html","permalink":"https://www.hermitlsr.top/game/tk-battle-old/index.html","excerpt":"","text":"//禁止页面选择以及鼠标右键 document.οncοntextmenu=function(){return false;}; document.onselectstart=function(){return false;}; let h = window.innerHeight; let w = window.innerWidth; //禁用右键 document.oncontextmenu = function () { return false; }; //在本网页的任何键盘敲击事件都是无效操作 （防止F12和shift+ctrl+i调起开发者工具） window.onkeydown = window.onkeyup = window.onkeypress = function () { window.event.returnValue = false; return false; } //禁用开发者工具F12 document.onkeydown = function () { if (window.event && window.event.keyCode == 123) { event.keyCode = 0; event.returnValue = false; return false; } }; // //如果用户在工具栏调起开发者工具，那么判断浏览器的可视高度和可视宽度是否有改变，如有改变则关闭本页面 // window.onresize = function () { // if (h != window.innerHeight || w != window.innerWidth) { // window.close(); // window.location = \"about:blank\"; // } // } 坦克大战 #canvasDiv canvas{ position:absolute; left: 572px; top: 187px; width: 878px; height: 672px; } body { background-color: #000000; } body,td,th { color: #FFFFFF; } &nbsp; &nbsp; 返回列表"},{"title":"","date":"2021-07-02T12:01:52.636Z","updated":"2021-07-02T12:01:52.636Z","comments":true,"path":"game/Tetris/index.html","permalink":"https://www.hermitlsr.top/game/Tetris/index.html","excerpt":"","text":"//禁止页面选择以及鼠标右键 document.οncοntextmenu=function(){return false;}; document.onselectstart=function(){return false;}; let h = window.innerHeight; let w = window.innerWidth; //禁用右键 document.oncontextmenu = function () { return false; }; //在本网页的任何键盘敲击事件都是无效操作 （防止F12和shift+ctrl+i调起开发者工具） window.onkeydown = window.onkeyup = window.onkeypress = function () { window.event.returnValue = false; return false; } //禁用开发者工具F12 document.onkeydown = function () { if (window.event && window.event.keyCode == 123) { event.keyCode = 0; event.returnValue = false; return false; } }; // //如果用户在工具栏调起开发者工具，那么判断浏览器的可视高度和可视宽度是否有改变，如有改变则关闭本页面 // window.onresize = function () { // if (h != window.innerHeight || w != window.innerWidth) { // window.close(); // window.location = \"about:blank\"; // } // } 俄罗斯方块 body { /*box-sizing: border-box;*/ margin: 0; padding: 0; background: url('https://cdn.jsdelivr.net/gh/hermitlsr/CDN-for-hermitlsr.top/game/Tetris/img/bg.png') repeat; } .wrap { position: absolute; left: 50%; top: 49px; width: 385px; height: 547px; margin-left: -193px; /*box-shadow: 0px 0px 5px 5px rgba(255,125,0, 0.6);*/ } .wrap div { position: absolute; } .wrap .now { left: 0; top: 0; width: 261px; height: 547px; background-color: rgba(255, 255, 255, 0.5); box-shadow: 0px 0px 5px 5px rgba(0, 0, 0, 0.6); } .wrap .next { right: 0; top: 0; width: 105px; height: 105px; background-color: rgba(255, 255, 255, 0.5); box-shadow: 0px 0px 5px 5px rgba(0, 0, 0, 0.6); } .wrap .score, .wrap .lines, .wrap .level, .wrap .pause, .wrap .refresh { left: 280px; top: 150px; width: 99px; height: 40px; line-height: 40px; padding-left: 6px; color: #F0907A; /*font-weight: bold;*/ border: 0 none; border-radius: 5px; background-color: rgba(0, 0, 0, 0.6); } .wrap .up, .wrap .left, .wrap .down, .wrap .right, .wrap .quickdown{ left: 330px; top: 420px; width: 40px; height: 40px; line-height: 40px; /*padding-left: 6px;*/ color: #fff; /*font-weight: bold;*/ border: 0 none; border-radius: 5px; text-align: center; background-color: rgba(0, 0, 0, 0.6); text-align: center; cursor: pointer; z-index: 2; } .wrap .left { left: 280px; top: 470px; background-color: rgba(0, 0, 0, 0.6); } .wrap .down { left: 330px; top: 470px; background-color: rgba(0, 0, 0, 0.6); } .wrap .right { left: 380px; top: 470px; background-color: rgba(0, 0, 0, 0.6); } .wrap .quickdown { left: 280px; top: 520px; width: 140px; height: 30px; background-color: rgba(0, 0, 0, 0.6); } .wrap .left:hover, .wrap .down:hover, .wrap .right:hover, .wrap .up:hover { background-color: rgba(0, 0, 0, 0.8); } .wrap .lines { top: 200px; color: #4DAEDD; } .wrap .level { top: 250px; color: #FF0033; } .wrap .pause, .wrap .refresh { top: 310px; width: 105px; padding-left: 0px; color: #fff; text-align: center; cursor: pointer; z-index: 2; } .wrap .pause:hover, .wrap .refresh:hover { background-color: rgba(0, 0, 0, 0.8); } .wrap .refresh { top: 360px; } .wrap .tips { display: none; left: 0px; top: 150px; width: 261px; height: 80px; line-height: 80px; color: #fff; font-size: 42px; font-weight: bolder; text-align: center; text-shadow: 0px 0px 5px #0F0; z-index: 2; } .wrap_prompt { display: none; position: fixed; left: 0; top: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.6); z-index: 5; } .wrap_prompt .prompt { position: absolute; left: 50%; top: 220px; width: 221px; height: 137px; margin-left: -172px; border-radius: 20px; background-color: rgba(255, 255, 255, 0.8); z-index: 6; } .wrap_prompt .prompt div { width: 51px; height: 51px; line-height: 51px; margin-left: 85px; margin-top: 20px; color: #fff; font-size: 30px; text-align: center; border: 2px solid #fff; border-radius: 100%; } .wrap_prompt .prompt .failed, .wrap_prompt .prompt .restart { display: block; color: #f00; line-height: 40px; text-align: center; } .wrap_prompt .prompt .restart { width: 121px; margin-left: 50px; color: #646464; background: yellow; border-radius: 50px; cursor: pointer; } #box { position: relative; width: 385px; height: 547px; margin: 50px auto; } #box div { position: absolute; width: 25px; height: 25px; /*border: 1px solid #000;*/ transform: rotate(0); transition: 0.25s; } #box .clDiv { transition: 1s !important; transform: rotate(0deg) translateX(0px) translateY(0px); width: 12.5px !important; height: 12.5px !important; border: none !important; } Good! SCORE: 0 LINES: 0 LEVEL: 0 开始 重新开始 ↑ → ↓ ← 空格 × 游戏失败 重新开始 var oWrap = document.body.querySelector('.wrap'); var oTips = document.body.querySelector('.wrap .tips'); var oScore = document.body.querySelector('.wrap .score span'); var oLines = document.body.querySelector('.wrap .lines span'); var oLevel = document.body.querySelector('.wrap .level span'); var oBtn = document.body.querySelector('.wrap .pause'); var oReset = document.body.querySelector('.wrap .refresh'); var oPrompt = document.body.querySelector('.wrap_prompt'); var oRestart = document.body.querySelector('.wrap_prompt .restart'); var cloneDivs = document.getElementsByClassName(\"clDiv\"); var tetris = { // 父容器 box: null,//document.getElementById('box'), // 游戏状态，0未开始，1运行，2终止 status: 0, quick: false, // 游戏分数 line: 0, level: 0, score: 0, // 时间间隔、定时器 step: 500, timer: null, // 游戏面板，数组 对应 div board: null, boardDiv: null, // 当前方块 nowBlock: null, // 下一方块 nextBlock: null, // 本次选中的方块 nownum: null, // 下一次选择中的方块 nextnum: null, creatblock: null, nextcreatblock: null, notecolorbox: null, // 初始化 init: function () { this.createBox(); this.creatblock = this.createBlock(); this.nowBlock = this.creatblock.block; this.nownum = this.creatblock.num; // this.drawBlock(); this.nextcreatblock = this.createBlock(); this.nextBlock = this.nextcreatblock.block; this.nextnum = this.nextcreatblock.num; // this.drawNextBlock(); // 先显示一次 this.drawBlock(); this.drawNextBlock(); // this.begin(); }, // 自动开始 begin: function () { // 自动下行 clearInterval(this.timer); this.timer = setInterval(function () { if (tetris.status == 1) tetris.moveDown(); }, this.step); }, // 暂停、开始 pause: function () { if (tetris.status == 0) { oBtn.innerHTML = '暂停'; tetris.status = 1; tetris.begin(); return true; } oBtn.innerHTML = '继续'; tetris.status = 0; clearInterval(tetris.timer); }, // 重新开始 reStart: function () { for (var i = 0; i < 21; i++) { for (var j = 0; j < 10; j++) { tetris.board[i][j] = 0; tetris.boardDiv[i * 10 + j].style.background = ''; } } tetris.eraseNextBlock(); tetris.creatblock = tetris.createBlock(); tetris.nowBlock = tetris.creatblock.block; tetris.nownum = tetris.creatblock.num; // tetris.drawBlock(); tetris.nextcreatblock = tetris.createBlock(); tetris.nextBlock = tetris.nextcreatblock.block; tetris.nextnum = tetris.nextcreatblock.num; // tetris.drawNextBlock(); tetris.drawBlock(); tetris.drawNextBlock(); oPrompt.style.display = 'none'; oBtn.innerHTML = '暂停'; tetris.status = 1; tetris.begin(); }, // 创建容器 createBox: function () { var str = ''; // 生成父容器 this.box = document.createElement('div'); this.box.id = 'box'; // 生成10*21的游戏矩阵 this.board = new Array(21); for (var i = 0; i < 21; i++) { this.board[i] = new Array(10); for (var j = 0; j < 10; j++) { this.board[i][j] = 0; str += ''; } } // 生成4*4的提示矩阵 for (var i = 0; i < 4; i++) { for (var j = 0; j < 4; j++) { str += ''; } } this.box.innerHTML = str; document.body.appendChild(this.box); this.boardDiv = document.querySelectorAll('#box > div'); }, // 创建方块 createBlock: function () { var block = new Array(4); var num = Math.floor(Math.random() * 7); switch (num) { case 0: { block[0] = {x: -2, y: 4};//** block[1] = {x: -1, y: 4};//** block[2] = {x: -2, y: 5}; block[3] = {x: -1, y: 5}; break; } case 1: { block[0] = {x: -1, y: 3};//**** block[1] = {x: -1, y: 4}; block[2] = {x: -1, y: 5}; block[3] = {x: -1, y: 6}; break; } case 2: { block[0] = {x: -3, y: 5};// * block[1] = {x: -2, y: 4};//** block[2] = {x: -2, y: 5};//* block[3] = {x: -1, y: 4}; break; } case 3: { block[0] = {x: -3, y: 4};//* block[1] = {x: -2, y: 4};//** block[2] = {x: -2, y: 5};// * block[3] = {x: -1, y: 5}; break; } case 4: { block[0] = {x: -2, y: 4};//* block[1] = {x: -1, y: 4};//*** block[2] = {x: -1, y: 5}; block[3] = {x: -1, y: 6}; break; } case 5: { block[0] = {x: -3, y: 4};//* block[1] = {x: -2, y: 4};//* block[2] = {x: -1, y: 4};//** block[3] = {x: -1, y: 5}; break; } case 6: { block[0] = {x: -2, y: 5};// * block[1] = {x: -1, y: 4};//*** block[2] = {x: -1, y: 5}; block[3] = {x: -1, y: 6}; break; } } return {block: block, num: num}; }, // 绘制方块 drawBlock: function () { for (var i = 0; i < 4; i++) { if (this.nowBlock[i].x < 0) continue; this.board[this.nowBlock[i].x][this.nowBlock[i].y] = 1; var num = this.nownum; switch (num) { case 0: { this.boardDiv[this.nowBlock[i].x * 10 + this.nowBlock[i].y].style.background = 'red'; break; } case 1: { this.boardDiv[this.nowBlock[i].x * 10 + this.nowBlock[i].y].style.background = 'orange'; break; } case 2: { this.boardDiv[this.nowBlock[i].x * 10 + this.nowBlock[i].y].style.background = 'yellow'; break; } case 3: { this.boardDiv[this.nowBlock[i].x * 10 + this.nowBlock[i].y].style.background = 'green'; break; } case 4: { this.boardDiv[this.nowBlock[i].x * 10 + this.nowBlock[i].y].style.background = 'lightgreen'; break; } case 5: { this.boardDiv[this.nowBlock[i].x * 10 + this.nowBlock[i].y].style.background = 'blue'; break; } case 6: { this.boardDiv[this.nowBlock[i].x * 10 + this.nowBlock[i].y].style.background = 'purple'; break; } } } }, // 清除方块 eraseBlock: function () { for (var i = 0; i < 4; i++) { if (this.nowBlock[i].x < 0) continue; this.board[this.nowBlock[i].x][this.nowBlock[i].y] = 0; this.boardDiv[this.nowBlock[i].x * 10 + this.nowBlock[i].y].style.background = ''; } }, // 绘制预览方块 drawNextBlock: function () { var nextBlock = this.nextBlock; // 位置修正，取得x坐标、y坐标中最小值，所有x加最小，所有y减最小值，即向左上位置移动到0 var x = 10, y = 10; for (var i = 0; i < 4; i++) { if (nextBlock[i].x < x) { x = nextBlock[i].x; } if (nextBlock[i].y < y) { y = nextBlock[i].y; } } var num = this.nextnum; switch (num) { case 0: { for (var i = 0; i < 4; i++) { this.boardDiv[210 + (nextBlock[i].x - x) * 4 + nextBlock[i].y - y].style.background = 'red'; } break; } case 1: { for (var i = 0; i < 4; i++) { this.boardDiv[210 + (nextBlock[i].x - x) * 4 + nextBlock[i].y - y].style.background = 'orange'; } break; } case 2: { for (var i = 0; i < 4; i++) { this.boardDiv[210 + (nextBlock[i].x - x) * 4 + nextBlock[i].y - y].style.background = 'yellow'; } break; } case 3: { for (var i = 0; i < 4; i++) { this.boardDiv[210 + (nextBlock[i].x - x) * 4 + nextBlock[i].y - y].style.background = 'green'; } break; } case 4: { for (var i = 0; i < 4; i++) { this.boardDiv[210 + (nextBlock[i].x - x) * 4 + nextBlock[i].y - y].style.background = 'lightgreen'; } break; } case 5: { for (var i = 0; i < 4; i++) { this.boardDiv[210 + (nextBlock[i].x - x) * 4 + nextBlock[i].y - y].style.background = 'blue'; } break; } case 6: { for (var i = 0; i < 4; i++) { this.boardDiv[210 + (nextBlock[i].x - x) * 4 + nextBlock[i].y - y].style.background = 'purple'; } break; } } }, // 清除预览方块 eraseNextBlock: function () { for (var i = 0; i < 16; i++) { this.boardDiv[210 + i].style.background = ''; } }, //记录当前所有 // calulateColor: function(Elem){ // var elem = document.getElementById(Elem); // var theCssprop = window.getComputedStyle(elem, null).getPropertyValue(\"background-color\"); // return theCssprop; // }, notenowBox: function (Index) { var Index = Index; var colorbox = new Array(210); var cnt = 0; for (var i = 0; i < this.board.length; i++) { for (var j = 0; j < this.board[i].length; j++) { // 问题在于如何提取色块的颜色 if (i==0) { colorbox[cnt] = \" \"; } else if (i"},{"title":"","date":"2021-05-28T16:25:28.000Z","updated":"2021-06-24T05:48:59.965Z","comments":true,"path":"relax/index.html","permalink":"https://www.hermitlsr.top/relax/index.html","excerpt":"","text":"小游戏 写在前面 这里的游戏是出于个人喜好，放在这里供自己把玩的。基于源码修改了部分游戏的内容。如果你恰好喜欢这里的游戏，欢迎留下你的足迹。游戏来源多种多样，但尽量都注明了出处，如有侵权问题，欢迎联系删除。 抓小猫 点击小圆点，围住小猫。你点击一次，小猫走一次。直到你把小猫围住（赢），或者小猫走到边界并逃跑（输）。 抓小猫/game/catch-cat-master/ 改动：暂无注：原作GitHub仓库地址：https://github.com/ganlvtech/phaser-catch-the-cat 2048 使用方向键控制数字块移动，含有触屏的设备可直接按方向滑动控制移动。数字移动时，相同的两个数字相遇，会相加为一块。直到数字块达到2048（赢），或者方框已被填满（输）。 2048/game/2048/ 改动：将文本改为简体中文注：原作GitHub仓库地址：https://github.com/DaoCloud/dao-2048 坦克大战（经典） 建议用电脑玩：玩家1：WASD上左下右，空格键射击。玩家2：方向键上下左右，回车键射击。玩家子弹和坦克子弹可以相互抵消。玩家之间攻击不构成伤N键下一关，P键上一关。点击返回列表可回到本页。 坦克大战（经典）/game/tk-battle-old/ 改动：修复了源码中玩家二子弹不起作用的问题。尝试添加玩家之间子弹起作用的效果。空闲时会打算添加关卡，目前仅21关（源码自带）。注：原作GitHub仓库地址：暂无已知最早来源：https://www.jq22.com/jquery-info6153 坦克大战（新） 仅支持电脑。单人模式使用方向键控制坦克方向，空格发射弹药。双人模式下玩家1使用W，A，S，D控制方向，空格发射弹药。玩家2使用方向键控制方向，数字0键发射弹药。其余设置详情见游戏内介绍。 坦克大战（新）https://tanke.biz.st 改动：暂无注：原作GitHub仓库地址：https://github.com/guzhou/tk 俄罗斯方块 方向键↑键变换图像。方向键↓键加速下降。左右键← →移动方向。空格键快速下落。P键暂停。当没有位置可下降时失败。有彩蛋。 俄罗斯方块/game/Tetris/ 改动：将方块颜色彩色化(赤橙黄绿青蓝紫)。消除后依然保留彩色效果。增加了方向键控制按钮。增加了空格健按钮。待开发在方块未完全出现时的变换形状的功能。注：原作GitHub仓库地址：暂无来源：https://www.jq22.com/jquery-info16258"},{"title":"","date":"2021-06-26T12:09:55.984Z","updated":"2021-06-26T12:09:55.984Z","comments":true,"path":"3D-periodic-table/index.html","permalink":"https://www.hermitlsr.top/3D-periodic-table/index.html","excerpt":"","text":"3D元素周期表 html, body { height: 100%; } body { background-color: #000000; margin: 0; font-family: tsanger-syt, Helvetica, sans-serif;; overflow: hidden; } a { color: #ffffff; } #info { position: absolute; width: 100%; color: #ffffff; padding: 5px; font-family: tsanger-syt, Monospace; font-size: 13px; font-weight: bold; text-align: center; z-index: 1; } #menu { position: absolute; bottom: 20px; width: 100%; text-align: center; font-family: tsanger-syt, verdana,Tahoma,Arial,Hei,\"Microsoft Yahei\",SimHei; } .element { width: 120px; height: 160px; box-shadow: 0px 0px 12px rgba(0,255,255,0.5); border: 1px solid rgba(127,255,255,0.25); text-align: center; cursor: default; } .element:hover { box-shadow: 0px 0px 12px rgba(0,255,255,0.75); border: 1px solid rgba(127,255,255,0.75); } .element .number { position: absolute; top: 20px; right: 20px; font-size: 12px; color: rgba(127,255,255,0.75); } .element .symbol { position: absolute; top: 40px; left: 0px; right: 0px; font-size: 60px; font-weight: bold; color: rgba(255,255,255,0.75); text-shadow: 0 0 10px rgba(0,255,255,0.95); } .element .details { position: absolute; bottom: 15px; left: 0px; right: 0px; font-size: 12px; color: rgba(127,255,255,0.75); } button { color: rgba(127,255,255,0.75); background: transparent; outline: 1px solid rgba(127,255,255,0.75); border: 0px; padding: 5px 10px; cursor: pointer; } button:hover { background-color: rgba(0,255,255,0.5); } button:active { color: #000000; background-color: rgba(0,255,255,0.75); } a{TEXT-DECORATION:none} 3D元素周期表 表格 球体 回家 螺旋 网格 var table = [ \"H\", \"Hydrogen\", \"1.00794\", 1, 1, \"He\", \"Helium\", \"4.002602\", 18, 1, \"Li\", \"Lithium\", \"6.941\", 1, 2, \"Be\", \"Beryllium\", \"9.012182\", 2, 2, \"B\", \"Boron\", \"10.811\", 13, 2, \"C\", \"Carbon\", \"12.0107\", 14, 2, \"N\", \"Nitrogen\", \"14.0067\", 15, 2, \"O\", \"Oxygen\", \"15.9994\", 16, 2, \"F\", \"Fluorine\", \"18.9984032\", 17, 2, \"Ne\", \"Neon\", \"20.1797\", 18, 2, \"Na\", \"Sodium\", \"22.98976...\", 1, 3, \"Mg\", \"Magnesium\", \"24.305\", 2, 3, \"Al\", \"Aluminium\", \"26.9815386\", 13, 3, \"Si\", \"Silicon\", \"28.0855\", 14, 3, \"P\", \"Phosphorus\", \"30.973762\", 15, 3, \"S\", \"Sulfur\", \"32.065\", 16, 3, \"Cl\", \"Chlorine\", \"35.453\", 17, 3, \"Ar\", \"Argon\", \"39.948\", 18, 3, \"K\", \"Potassium\", \"39.948\", 1, 4, \"Ca\", \"Calcium\", \"40.078\", 2, 4, \"Sc\", \"Scandium\", \"44.955912\", 3, 4, \"Ti\", \"Titanium\", \"47.867\", 4, 4, \"V\", \"Vanadium\", \"50.9415\", 5, 4, \"Cr\", \"Chromium\", \"51.9961\", 6, 4, \"Mn\", \"Manganese\", \"54.938045\", 7, 4, \"Fe\", \"Iron\", \"55.845\", 8, 4, \"Co\", \"Cobalt\", \"58.933195\", 9, 4, \"Ni\", \"Nickel\", \"58.6934\", 10, 4, \"Cu\", \"Copper\", \"63.546\", 11, 4, \"Zn\", \"Zinc\", \"65.38\", 12, 4, \"Ga\", \"Gallium\", \"69.723\", 13, 4, \"Ge\", \"Germanium\", \"72.63\", 14, 4, \"As\", \"Arsenic\", \"74.9216\", 15, 4, \"Se\", \"Selenium\", \"78.96\", 16, 4, \"Br\", \"Bromine\", \"79.904\", 17, 4, \"Kr\", \"Krypton\", \"83.798\", 18, 4, \"Rb\", \"Rubidium\", \"85.4678\", 1, 5, \"Sr\", \"Strontium\", \"87.62\", 2, 5, \"Y\", \"Yttrium\", \"88.90585\", 3, 5, \"Zr\", \"Zirconium\", \"91.224\", 4, 5, \"Nb\", \"Niobium\", \"92.90628\", 5, 5, \"Mo\", \"Molybdenum\", \"95.96\", 6, 5, \"Tc\", \"Technetium\", \"(98)\", 7, 5, \"Ru\", \"Ruthenium\", \"101.07\", 8, 5, \"Rh\", \"Rhodium\", \"102.9055\", 9, 5, \"Pd\", \"Palladium\", \"106.42\", 10, 5, \"Ag\", \"Silver\", \"107.8682\", 11, 5, \"Cd\", \"Cadmium\", \"112.411\", 12, 5, \"In\", \"Indium\", \"114.818\", 13, 5, \"Sn\", \"Tin\", \"118.71\", 14, 5, \"Sb\", \"Antimony\", \"121.76\", 15, 5, \"Te\", \"Tellurium\", \"127.6\", 16, 5, \"I\", \"Iodine\", \"126.90447\", 17, 5, \"Xe\", \"Xenon\", \"131.293\", 18, 5, \"Cs\", \"Caesium\", \"132.9054\", 1, 6, \"Ba\", \"Barium\", \"132.9054\", 2, 6, \"La\", \"Lanthanum\", \"138.90547\", 4, 9, \"Ce\", \"Cerium\", \"140.116\", 5, 9, \"Pr\", \"Praseodymium\", \"140.90765\", 6, 9, \"Nd\", \"Neodymium\", \"144.242\", 7, 9, \"Pm\", \"Promethium\", \"(145)\", 8, 9, \"Sm\", \"Samarium\", \"150.36\", 9, 9, \"Eu\", \"Europium\", \"151.964\", 10, 9, \"Gd\", \"Gadolinium\", \"157.25\", 11, 9, \"Tb\", \"Terbium\", \"158.92535\", 12, 9, \"Dy\", \"Dysprosium\", \"162.5\", 13, 9, \"Ho\", \"Holmium\", \"164.93032\", 14, 9, \"Er\", \"Erbium\", \"167.259\", 15, 9, \"Tm\", \"Thulium\", \"168.93421\", 16, 9, \"Yb\", \"Ytterbium\", \"173.054\", 17, 9, \"Lu\", \"Lutetium\", \"174.9668\", 18, 9, \"Hf\", \"Hafnium\", \"178.49\", 4, 6, \"Ta\", \"Tantalum\", \"180.94788\", 5, 6, \"W\", \"Tungsten\", \"183.84\", 6, 6, \"Re\", \"Rhenium\", \"186.207\", 7, 6, \"Os\", \"Osmium\", \"190.23\", 8, 6, \"Ir\", \"Iridium\", \"192.217\", 9, 6, \"Pt\", \"Platinum\", \"195.084\", 10, 6, \"Au\", \"Gold\", \"196.966569\", 11, 6, \"Hg\", \"Mercury\", \"200.59\", 12, 6, \"Tl\", \"Thallium\", \"204.3833\", 13, 6, \"Pb\", \"Lead\", \"207.2\", 14, 6, \"Bi\", \"Bismuth\", \"208.9804\", 15, 6, \"Po\", \"Polonium\", \"(209)\", 16, 6, \"At\", \"Astatine\", \"(210)\", 17, 6, \"Rn\", \"Radon\", \"(222)\", 18, 6, \"Fr\", \"Francium\", \"(223)\", 1, 7, \"Ra\", \"Radium\", \"(226)\", 2, 7, \"Ac\", \"Actinium\", \"(227)\", 4, 10, \"Th\", \"Thorium\", \"232.03806\", 5, 10, \"Pa\", \"Protactinium\", \"231.0588\", 6, 10, \"U\", \"Uranium\", \"238.02891\", 7, 10, \"Np\", \"Neptunium\", \"(237)\", 8, 10, \"Pu\", \"Plutonium\", \"(244)\", 9, 10, \"Am\", \"Americium\", \"(243)\", 10, 10, \"Cm\", \"Curium\", \"(247)\", 11, 10, \"Bk\", \"Berkelium\", \"(247)\", 12, 10, \"Cf\", \"Californium\", \"(251)\", 13, 10, \"Es\", \"Einstenium\", \"(252)\", 14, 10, \"Fm\", \"Fermium\", \"(257)\", 15, 10, \"Md\", \"Mendelevium\", \"(258)\", 16, 10, \"No\", \"Nobelium\", \"(259)\", 17, 10, \"Lr\", \"Lawrencium\", \"(262)\", 18, 10, \"Rf\", \"Rutherfordium\", \"(267)\", 4, 7, \"Db\", \"Dubnium\", \"(268)\", 5, 7, \"Sg\", \"Seaborgium\", \"(271)\", 6, 7, \"Bh\", \"Bohrium\", \"(272)\", 7, 7, \"Hs\", \"Hassium\", \"(270)\", 8, 7, \"Mt\", \"Meitnerium\", \"(276)\", 9, 7, \"Ds\", \"Darmstadium\", \"(281)\", 10, 7, \"Rg\", \"Roentgenium\", \"(280)\", 11, 7, \"Cn\", \"Copernicium\", \"(285)\", 12, 7, \"Uut\", \"Unutrium\", \"(284)\", 13, 7, \"Fl\", \"Flerovium\", \"(289)\", 14, 7, \"Uup\", \"Ununpentium\", \"(288)\", 15, 7, \"Lv\", \"Livermorium\", \"(293)\", 16, 7, \"Uus\", \"Ununseptium\", \"(294)\", 17, 7, \"Uuo\", \"Ununoctium\", \"(294)\", 18, 7 ]; var camera, scene, renderer; var controls; var objects = []; var targets = { table: [], sphere: [], helix: [], grid: [] }; init(); animate(); function init() { camera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 10000 ); camera.position.z = 3000; scene = new THREE.Scene(); // table for ( var i = 0; i < table.length; i += 5 ) { var element = document.createElement( 'div' ); element.className = 'element'; element.style.backgroundColor = 'rgba(0,127,127,' + ( Math.random() * 0.5 + 0.25 ) + ')'; var number = document.createElement( 'div' ); number.className = 'number'; number.textContent = (i/5) + 1; element.appendChild( number ); var symbol = document.createElement( 'div' ); symbol.className = 'symbol'; symbol.textContent = table[ i ]; element.appendChild( symbol ); var details = document.createElement( 'div' ); details.className = 'details'; details.innerHTML = table[ i + 1 ] + '' + table[ i + 2 ]; element.appendChild( details ); var object = new THREE.CSS3DObject( element ); object.position.x = Math.random() * 4000 - 2000; object.position.y = Math.random() * 4000 - 2000; object.position.z = Math.random() * 4000 - 2000; scene.add( object ); objects.push( object ); // var object = new THREE.Object3D(); object.position.x = ( table[ i + 3 ] * 140 ) - 1330; object.position.y = - ( table[ i + 4 ] * 180 ) + 990; targets.table.push( object ); } // sphere var vector = new THREE.Vector3(); for ( var i = 0, l = objects.length; i < l; i ++ ) { var phi = Math.acos( -1 + ( 2 * i ) / l ); var theta = Math.sqrt( l * Math.PI ) * phi; var object = new THREE.Object3D(); object.position.x = 800 * Math.cos( theta ) * Math.sin( phi ); object.position.y = 800 * Math.sin( theta ) * Math.sin( phi ); object.position.z = 800 * Math.cos( phi ); vector.copy( object.position ).multiplyScalar( 2 ); object.lookAt( vector ); targets.sphere.push( object ); } // helix var vector = new THREE.Vector3(); for ( var i = 0, l = objects.length; i < l; i ++ ) { var phi = i * 0.175 + Math.PI; var object = new THREE.Object3D(); object.position.x = 900 * Math.sin( phi ); object.position.y = - ( i * 8 ) + 450; object.position.z = 900 * Math.cos( phi ); vector.x = object.position.x * 2; vector.y = object.position.y; vector.z = object.position.z * 2; object.lookAt( vector ); targets.helix.push( object ); } // grid for ( var i = 0; i < objects.length; i ++ ) { var object = new THREE.Object3D(); object.position.x = ( ( i % 5 ) * 400 ) - 800; object.position.y = ( - ( Math.floor( i / 5 ) % 5 ) * 400 ) + 800; object.position.z = ( Math.floor( i / 25 ) ) * 1000 - 2000; targets.grid.push( object ); } // renderer = new THREE.CSS3DRenderer(); renderer.setSize( window.innerWidth, window.innerHeight ); renderer.domElement.style.position = 'absolute'; document.getElementById( 'container' ).appendChild( renderer.domElement ); // controls = new THREE.TrackballControls( camera, renderer.domElement ); controls.rotateSpeed = 0.5; controls.minDistance = 500; controls.maxDistance = 6000; controls.addEventListener( 'change', render ); var button = document.getElementById( 'table' ); button.addEventListener( 'click', function ( event ) { transform( targets.table, 2000 ); }, false ); var button = document.getElementById( 'sphere' ); button.addEventListener( 'click', function ( event ) { transform( targets.sphere, 2000 ); }, false ); var button = document.getElementById( 'helix' ); button.addEventListener( 'click', function ( event ) { transform( targets.helix, 2000 ); }, false ); var button = document.getElementById( 'grid' ); button.addEventListener( 'click', function ( event ) { transform( targets.grid, 2000 ); }, false ); transform( targets.table, 5000 ); // window.addEventListener( 'resize', onWindowResize, false ); } function transform( targets, duration ) { TWEEN.removeAll(); for ( var i = 0; i < objects.length; i ++ ) { var object = objects[ i ]; var target = targets[ i ]; new TWEEN.Tween( object.position ) .to( { x: target.position.x, y: target.position.y, z: target.position.z }, Math.random() * duration + duration ) .easing( TWEEN.Easing.Exponential.InOut ) .start(); new TWEEN.Tween( object.rotation ) .to( { x: target.rotation.x, y: target.rotation.y, z: target.rotation.z }, Math.random() * duration + duration ) .easing( TWEEN.Easing.Exponential.InOut ) .start(); } new TWEEN.Tween( this ) .to( {}, duration * 2 ) .onUpdate( render ) .start(); } function onWindowResize() { camera.aspect = window.innerWidth / window.innerHeight; camera.updateProjectionMatrix(); renderer.setSize( window.innerWidth, window.innerHeight ); render(); } function animate() { requestAnimationFrame( animate ); TWEEN.update(); controls.update(); } function render() { renderer.render( scene, camera ); }"},{"title":"朋友圈","date":"2021-07-11T08:28:29.000Z","updated":"2021-07-11T09:57:21.875Z","comments":false,"path":"friendcircle/index.html","permalink":"https://www.hermitlsr.top/friendcircle/index.html","excerpt":"","text":""},{"title":"","date":"2021-07-11T14:18:39.306Z","updated":"2021-07-11T14:18:39.306Z","comments":true,"path":"404.html","permalink":"https://www.hermitlsr.top/404.html","excerpt":"","text":""},{"title":"","date":"2021-07-17T16:44:57.083Z","updated":"2021-07-17T16:44:57.083Z","comments":true,"path":"error.html","permalink":"https://www.hermitlsr.top/error.html","excerpt":"","text":""}],"posts":[{"title":"菜谱","slug":"菜谱-2021-07-13-菜谱","date":"2021-07-13T04:55:04.000Z","updated":"2021-07-14T15:55:21.975Z","comments":false,"path":"2021-07-13/70a7eda9.html","link":"","permalink":"https://www.hermitlsr.top/2021-07-13/70a7eda9.html","excerpt":"","text":"卤肉 食材：五花肉，熟鸡蛋，干葱，蒜片，洋葱，大料，香菇调味: 生抽，老抽，沙爹酱，胡椒粉，玫瑰露酒做法：花肉切条，留几块大的改刀做“霸王桩”，使口感更丰富。部分干葱、蒜片、洋葱和大葱下油锅，大葱缓放，防止炸干，炸至金黄色，捞出备用。大料瓣炸香，下“霸王桩”生煸，再推入五花肉和剩余的葱。葱煸成金黄色，下入攥干水分的香菇，顺锅边烹入生抽，出香气，加入沙爹酱，炒匀。加水，加老抽，再考虑是否加水，加胡椒粉，少许玫瑰露酒增香，加入之前炸好的葱，转至砂锅顿制。开锅时用老抽调颜色，炖二十多分钟时加入熟鸡蛋，炖半小时，闷十分钟即可出锅。来源：老饭骨 藤椒鱼 食材：鳜鱼、乌鱼或者草鱼 甚至白莲？？，葱，姜，酸(泡)菜，淀粉调味：盐，料酒，藤椒油做法：鱼骨肉分离，去掉鱼皮，鱼肉片成片。用姜，葱，料酒，少许盐将鱼肉码味半小时。锅内少许油，加入姜，葱，酸(泡)菜炒香之后加入高汤，微煮五分钟左右，姜葱酸菜打去不用。先放入鱼头，鱼骨煮五分钟左右，盛出放入盘中。再下入码好的鱼肉，下锅前裹少许干淀粉，中小火慢煮，刚好断生，鱼肉微卷起锅。将藤椒放入盘中，油温七成热淋在藤椒上。来源：大师的菜","categories":[],"tags":[]},{"title":"R语言的久远学习笔记--参数估计","slug":"Long-term-study-notes-of-R-2021-07-12-R语言的久远学习笔记-参数估计","date":"2021-07-12T03:22:51.000Z","updated":"2021-07-13T04:49:06.718Z","comments":false,"path":"2021-07-12/a251816e.html","link":"","permalink":"https://www.hermitlsr.top/2021-07-12/a251816e.html","excerpt":"这是曾经R语言软件课程的简单笔记的参数估计部份，整理至此。","text":"这是曾经R语言软件课程的简单笔记的参数估计部份，整理至此。 矩法估计和极大似然估计 矩法估计 无固定的函数，矩估计需自行构造统计量，并计算相关数据 例： 1234X&lt;-sample(c(1,0), 20, replace = T, prob = c(0.6, 0.4))theta &lt;- mean(X)t &lt;- theta/(1-theta) # 构造的t统计量t 极大似然估计 需自行求解出(对数)极大似然函数，可以使用optimize()函数求解极大值和极大值点。多参数时可使用optim()或nlm() optimize(f = , interval = ,lower = min(interval), upper = max(interval), maximum = T, tol = .Machine$dobule.eps^&#123;0.25&#125;, \\cdots 例： 12f &lt;- function(p)(p^517)*(1-p)^483optimize(f, c(0,1), maximum = T) 单正态总体参数的区间估计 均值μ\\muμ的区间估计 方差σ2\\sigma^2σ2已知时μ\\muμ的置信区间 这种情况下R语言中没有相关内置函数，以下给出方差σ2\\sigma^2σ2已知时μ\\muμ的置信区间估计的R语言函数。 1234567891011121314151617181920z.test &lt;- function(x, n, sigma, alpha=0.05, u0=0, alternative=&quot;two.side&quot;)&#123; mean &lt;- mean(x) z &lt;- (mean-u0)/(sigma/sqrt(n)) p &lt;- pnorm(z, lower.tail = F) mean &lt;- mean z &lt;- z p.value &lt;- p if(alternative ==&quot;two.side&quot;)&#123; p.value &lt;- 2*pnorm(abs(z), lower.tail = F) &#125;else&#123; p.value &lt;- pnorm(z) &#125; conf.int &lt;- c( mean-sigma*qnorm(1-alpha/2, mean=0, sd=1, lower.tail = T)/sqrt(n), mean+sigma*qnorm(1-alpha/2, mean=0, sd=1, lower.tail = T)/sqrt(n) ) out &lt;- list(mean=mean, z=z, p.value=p.value, conf.int=conf.int)&#125; 验证一个例子 123x &lt;- c(175, 176, 173, 175, 174, 173, 173, 176, 173, 179)result &lt;-z.test(x, 10, 1.5, 0.05)result 方差σ2\\sigma^2σ2未知时μ\\muμ的置信区间 此时R语言中有内置函数t.test() 例： 123x &lt;- c(175, 176, 173, 175, 174, 173, 173, 176, 173, 179)result &lt;-t.test(x)result 方差σ2\\sigma^2σ2的区间估计 讨论μ\\muμ未知，此种情况R语言中依然没有内置函数求解方差σ2\\sigma^2σ2的区间估计，给出函数chisq.var.test如下 1234567891011121314151617181920chisq.var.test &lt;- function(x, var, alpha, alternative = &quot;two.side&quot;)&#123; n &lt;- length(x) v &lt;- var(x) chi &lt;- (n-1)*v/var p.value &lt;- pchisq(chi, n-1) if(alternative==&quot;less&quot;)&#123; p.value &lt;- pchisq(chi, n-1, lower.tail = F) &#125;else if(alternative==&quot;two.side&quot;)&#123; p.value &lt;- 2*min(pchisq(chi, n-1), pchisq(chi, n-1, lower.tail = F)) &#125; conf.int &lt;- c( (n-1)*v/qchisq(alpha/2, df=n-1, lower.tail = F), (n-1)*v/qchisq(alpha/2, df=n-1, lower.tail = T) ) out &lt;- list(var=v, chi2=chi, p.value=p.value, conf.int=conf.int)&#125; 给出一个验证 123x &lt;- c(175, 176, 173, 175, 174, 173, 173, 176, 173, 179)result &lt;- chisq.var.test(x , var=1.5, alpha=0.05)result 正态总体参数的区间估计 均值差μ1−μ2\\mu_1-\\mu_2μ1​−μ2​的置信区间 两方差都已知时两均值差的置信区间 依然没有内置函数，需给出函数two.sample.ci()，求解双侧置信区间 1234567two.sample.ci &lt;- function(x, y, conf.int = 0.95, sigma1, sagma2)&#123; alpha = 1-conf.int m &lt;- length(x); n&lt;-length(y) xbar = mean(x)-mean(y) zstar = qnorm(1-alpha/2)*sqrt((sigma1/m+sagma2/n)) xbar + c(-zstar,+zstar)&#125; 看一个例子： 1234x &lt;- c(628, 583, 510, 554, 612, 523, 530, 615)y &lt;- c(534, 433, 398, 470, 567, 480, 498, 560, 503, 426)sigma1 &lt;- 2140;sigma2&lt;-3250two.sample.ci(x, y, conf.int=0.95, sigma1, sigma2) 两方差都未知但相等时两均值差的置信区间 此时可以直接利用t.test()函数 123x &lt;- c(628, 583, 510, 554, 612, 523, 530, 615)y &lt;- c(534, 433, 398, 470, 567, 480, 498, 560, 503, 426)t.test(x,y,var.equal = T) 均值差σ12/σ22\\sigma^2_1/\\sigma^2_2σ12​/σ22​的置信区间 此时,在R中var.test()可以直接用于求两正态总体方差比的置信区间 例子： 123x &lt;- c(20.5, 19.8, 19.7, 20.4, 20.1, 20.0, 19.0, 19.9)y &lt;- c(20.7, 19.8, 19.5, 20.8, 20.4, 19.6, 20.2)var.test(x,y) 单总体比率ppp的区间估计 假设估计在总体中具有某种特性的个体站总体的比例，设为ppp。例如整个学校中女生占全校人数的比例，产品的不合格率，电视的收视率，政策的支持率等。这里采用一种求ppp的近似区间估计的方法， 称在样本中具有某种特征的个体站样本总数的比例为样本比例。设xxx为容量为n的样本中具有某种特征的个体数量，则样本比例为x/nx/nx/n。当总体中的样品数足够多时，xxx近似服从二项分布b(n,p)b(n,p)b(n,p)(实际上它是超几何分布)，这时总体比例可用样本比例来估计，及p^=xn\\hat p=\\frac{x}{n}p^​=nx​，且为极大似然估计。 可直接使用prop.test()对ppp进行估计与检验，这时用正态分布来近似 一个例子 ：矫正 1prop.test(38, 200, correct = T) 不矫正： 1prop.test(38, 200, correct = F) 用二项分布来近似binom.test() 1binom.test(38, 200) 两总体比率差pi−p2p_i-p_2pi​−p2​的区间估计 这里仍可使用函数prop.test()，这里给出的是经过连续性修正之后的结果 123like &lt;- c(478, 246)people &lt;- c(1000, 750)prop.test(like, people) 可自行给出函数ratio.ci() 计算没有修正的两比例之间的区间估计 12345678ratio.ci &lt;- function(x,y,n1,n2,conf.level)&#123; xbar1 &lt;- x/n1; xbar2 &lt;- y/n2 xbar &lt;- xbar1-xbar2 alpha &lt;- 1-conf.level zstar &lt;- qnorm(1-alpha/2)* (xbar1*(1-xbar1)/n1+xbar2*(1-xbar2)/n2)^(1/2) xbar+c(-zstar,+zstar)&#125; 给一个例子 1ratio.ci(478, 246, 1000, 750, conf.level = 0.95) 估计正态总体均值时样本容量的确定 总体方差σ2\\sigma^2σ2已知 给出自定义函数size.norm1： 1234size.norm1 &lt;- function(d, var, conf.level=0.95)&#123; alpha &lt;- 1-conf.level ((qnorm(1-alpha/2)*var^(1/2))/d)^2&#125; 给一个例子：某地区1000户，拟抽取一个简单的样本调查一个月的评价开始，要求置信水平95%，允许最大误差为2，根据经验，家庭间开支的方差为500，应抽取多少户进行调查 1size.norm1(2, 500, conf.level = 0.95) 总体方差σ2\\sigma^2σ2未知 给出函数size.norm2() 1234567891011size.norm2 &lt;- function(s, alpha, d, m)&#123; t0 &lt;- qt(alpha/2, m, lower.tail = F) n0 &lt;- (t0*s/d)^2 t1 &lt;- qt(alpha/2, n0, lower.tail = F) n1 &lt;- (t1*s/d)^2 while(abs(n1-n0)&gt;0.5)&#123; n0 &lt;- (qt(alpha/2, n1, lower.tail = F)*s/d)^2 n1 &lt;- (qt(alpha/2, n0, lower.tail = F)*s/d)^2 &#125; n1&#125; 给一个例子： 某公司生产了一批新产品，产品总体服从正态分布，现要估计这批产品的平均重量，最大允许误差2，样本标准差s=10s=10s=10，试问α=0.01\\alpha=0.01α=0.01下要抽多少样本 1size.norm2(10, 0.01, 2, 100) 估计比例ppp时样本容量的确定 同样给出自定义函数size.bin &lt;- f() 1234size.bin &lt;- function(d, p, conf.level = 0.95)&#123; alpha = 1 - conf.level ((qnorm(1-alpha/2))/d)^2*p*(1-p)&#125; 例 ：某市一所重点大学历届毕业生就业率为90%，估计应用毕业生就业率，要求估计误差不超过3%，试问α=0.05\\alpha=0.05α=0.05下要抽取应届毕业生多少人？ 1size.bin(0.03, 0.9, 0.95)","categories":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/categories/R/"},{"name":"学习笔记","slug":"R/学习笔记","permalink":"https://www.hermitlsr.top/categories/R/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/tags/R/"},{"name":"参数估计","slug":"参数估计","permalink":"https://www.hermitlsr.top/tags/%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/"}]},{"title":"建站序言","slug":"建站序言","date":"2021-06-28T02:38:05.000Z","updated":"2021-07-13T04:04:35.979Z","comments":false,"path":"2021-06-28/18ee7c87.html","link":"","permalink":"https://www.hermitlsr.top/2021-06-28/18ee7c87.html","excerpt":"欢迎来到在下的小站，本站自2021.6.29正式发布，今后这里将存放一些自己的笔记和生活记录，或者放一些好玩的东东。","text":"欢迎来到在下的小站，本站自2021.6.29正式发布，今后这里将存放一些自己的笔记和生活记录，或者放一些好玩的东东。 建站初衷 搭建个人站主要目的是为了存放自己的一些 .md 的笔记。在电脑上实在不好管理，也不好查看。通过个人站的形式呈现出来一目了然，十分方便。Volantis 中的 group front-matter 可以基本呈现出书籍文档类的效果，基本满足了我的需求。于是这个基于Hexo -Volantis 主题的小站就此开始建设了。 建站历程 萌生搭建个人站的想法已经有几年了，之所以直到现在才搭建自己的个人站主要还是因为时间不够和畏难心理。一开始考虑到需要购置服务器，自己写网页前端，设计各种素材等等，就头大。没错，对于一个程序语言就能勉强写点python和r的人，完全不沾边啊。当然如果我早点知道有这么多静态博客的框架可以直接用，或许这个站点可以提早出生几年(不是)。 前段时间，也是机缘巧合发现了Hexo这个博客架构，本着程序员(伪)决不重复造轮子的心态，果断采用了简洁的 Next 主题。无他，页面简洁教程多，结果当事人是非常的后悔。 由于太过简洁，需要自己魔改的内容就非常多，而网上的一些教程也不适配现在的 8.0 版本，就踩了很多坑，不过也因此接触了一些 js、css等内容，这为后面顺利美化博客打了基础。 万幸偶遇到 翀翀，给我指了一条明路，虽然当时没放在心上，不过现在嘛，是真的香。中间经历了一个Butterfly主题，据官方说也是从 Material X 演变过来的，各种配置文档什么的都不错，集成了很多功能，基本只需要自己配置一下设置文档，但体验了一下太花里胡哨，不符合在下矜(古)持(板)的形象。最后还是选择 Volantis 够香，好滋味。 站点基本建设起来之后，考虑到国内访问的问题(github.io 域名被有的浏览器ban了)，决定还是买一个域名，顺便备个案，以便可以在国内愉快的玩耍。在这途中偶然发现目前 coding 的持续部署是使用了腾讯云的 severless和cos存储 ，而腾讯的云函数文档中也直接提供了使用云函数直接部署 Hexo 博客的接口，简直不要太方便。最后就直接买了一个五年的云函数服务一则用来备案，二来则用来部署生成的静态页面。 最后 希望自己能够坚持写学习笔记，坚持记录，想必过几年来看也是一个不错的回忆和知识储备。也希望巧合来到本站的你，幸福开心。","categories":[],"tags":[]},{"title":"Volantis 建站记录","slug":"Volantis-建站记录","date":"2021-06-26T14:04:56.000Z","updated":"2021-07-22T11:44:19.521Z","comments":false,"path":"2021-06-26/40ecd548.html","link":"","permalink":"https://www.hermitlsr.top/2021-06-26/40ecd548.html","excerpt":"本文记录了自己建站时操作的一些内容，或简或繁，主要是为了方便日后主题升级，设备更换时能够顺利迁移，同时向参考的一些站点博主表示感谢。","text":"本文记录了自己建站时操作的一些内容，或简或繁，主要是为了方便日后主题升级，设备更换时能够顺利迁移，同时向参考的一些站点博主表示感谢。 站点参考 本站参考了一些博客站点的设置及美化，或受其启发，或用到其类似的功能或配置，不能一应俱全的列举出来，都一并表示感谢。 TRHX’S BLOG 黑石博客 inkss Colsrch W4J1e 恶搞标题 当用户在访问站点切换到其他网页时，可以呈现恶搞标题效果。 新建 FunnyTitle.js 在主题文件夹\\themes\\volantis\\source\\js 中新建 FunnyTitle.js ，在其中添加如下代码： \\themes\\volantis\\source\\js\\FunnyTitle.js1234567891011121314151617// 浏览器搞笑标题var OriginTitle = document.title;var titleTime;document.addEventListener(&#x27;visibilitychange&#x27;, function () &#123; if (document.hidden) &#123; $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/funny.ico&quot;); document.title = &#x27;╭(°A°`)╮ 呀怎么舍得走哇 ~&#x27;; clearTimeout(titleTime); &#125; else &#123; $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/favicon.ico&quot;); document.title = &#x27;(ฅ&gt;ω&lt;*ฅ) 噫又回来了耶 ~&#x27; + OriginTitle; titleTime = setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125;&#125;); 其中favicon.ico 是正常图标， funny.ico 是用户切换到其它标签后你网站的图标。 启用这个 .js 文件 在 \\themes\\volantis\\layout\\layout.ejs 文件中的 &lt;body&gt; 下面添加如下代码： \\themes\\volantis\\layout\\layout.ejs12&lt;!--浏览器搞笑标题--&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/FunnyTitle.js&quot;&gt;&lt;/script&gt; 另外，也可以将上述 FunnyTitle.js 托管到 Github上，在此引用 jsdelivr 的加速链接。 底部建站时间 设置 footer.ejs 文件 这里首先需要设置 footer.ejs 文件，其在 Volantis 主题的位置是 \\themes\\volantis\\layout\\_partial\\footer.ejs 。在其中的第48行的位置后添加如下代码： \\themes\\volantis\\layout\\_partial\\footer.ejs12345678else if (item == &#x27;runtime_count&#x27;) &#123; %&gt; &lt;span id=&quot;runtime_span&quot;&gt;&lt;/span&gt; &lt;script type=&quot;text/javascript&quot;&gt;function show_runtime()&#123;window.setTimeout(&quot;show_runtime()&quot;,1000);X=new Date(&quot;5/25/2021 00:00:00&quot;); Y=new Date();T=(Y.getTime()-X.getTime());M=24*60*60*1000; a=T/M; dnum=Math.floor(a); b=(a-dnum)*24; hnum=Math.floor(b);c=(b-hnum)*60; mnum=Math.floor((b-hnum)*60); snum=Math.floor((c-mnum)*60); runtime_span.innerText =&quot;⚡&quot;+&quot;本站在风雨飘摇中度过了 &quot; + dnum + &quot; 天 &quot; + hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot; + &quot;⚡&quot;&#125;;show_runtime();&lt;/script&gt; 可以根据需要修改 runtime_span.innerText 中的文本。 注意 item == 'runtime_count' 其中 runtime_count 可以自定义，在主题配置文件中引用相同的名称即可。需要引用的内容只有 &lt;span id=&quot;runtime_span&quot;&gt;&lt;/span&gt;，具体看下面。 启用该设置 在 Volantis 中启用它，找到 site_footer 部分，在其下加入： _config.volantis.yml12runtime_count: &lt;span id=&quot;runtime_span&quot;&gt;&lt;/span&gt; 别忘了在前面的 layout:[] 部分中加入 runtime_count 。 网页弹窗 这里主要运用 javascript 插件 ：[ Sweetalert 、Sweetalert-github] 具体安装和使用方法可见其 官网 和 Github 。我采用了直接引用的方法。 在 \\themes\\volantis\\layout\\_partial\\head.ejs 文件中的第二行 &lt;meta charset=&quot;utf-8&quot;&gt; 后加入： \\themes\\volantis\\layout\\_partial\\head.ejs123&lt;meta charset=&quot;utf-8&quot;&gt;&lt;!-- 在此后加入 --&gt;&lt;!-- Sweetalert弹窗显示 --&gt; &lt;script src=&quot;https://unpkg.com/sweetalert/dist/sweetalert.min.js&quot;&gt;&lt;/script&gt; 或者使用 jsdeliver ： \\themes\\volantis\\layout/_partial/head.ejs123&lt;meta charset=&quot;utf-8&quot;&gt;&lt;!-- 在此后加入 --&gt;&lt;!-- Sweetalert弹窗显示 --&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/sweetalert&quot;&gt;&lt;/script&gt; 并由此实现了以下几个功能 (目前网页只保留了2) ： 进入网站弹窗 复制网站内容弹窗 复制代码弹窗 右键复制弹窗 网站弹窗+自动切换暗黑主题 进入网站弹窗 这里参考了：https://luosw.fun/post/e281.html ，但这篇博文提到的关于自动调整暗黑模式+弹窗的逻辑反了，随后又看了一下colsrch 大佬的博文 https://colsrch.cn/posts/9eae9d7b/ 这里直接设置 \\themes\\volantis\\layout\\index.ejs 文件就可以了，在其开头加入： \\themes\\volantis\\layout\\index.ejs123456789&lt;!-- 网页访问欢迎弹窗 --&gt;&lt;script&gt;swal(&#123; title: &#x27;花径不曾缘客扫，蓬门今始为君开。&#x27;, text: &quot;在下是博主hemitlsr，这里作为个人学习生活的记录而存在。\\n 在这里可以看博文，玩游戏，交朋友。\\n 欢迎留言，交换友链。\\n 但请不要留下不友好的痕迹，不然在下隔着屏幕咬你啊。&quot;, icon: &#x27;https://cdn.jsdelivr.net/gh/hermitlsr/image-for-hermitlsr.top/web/rickavatar.png&#x27;, button: &quot;好的，已知晓&quot;,&#125;);&lt;/script&gt; 这里 swal() 是引用该弹窗的函数，其有四个可选参数：title 、text 、icon 、button 。其中 icon 有四个默认的选项，可设置为 icon 图标，这里在下使用的是图片。 复制网站内容弹窗 复制代码弹窗 这里需要设置 layout\\third-party\\clipboard\\script.ejs 文件，在后20行 clipboard.off('success').on('success', function (e) &#123;&#125; 中： layout\\third-party\\clipboard\\script.ejs1234567&lt;!-- 复制代码弹窗 --&gt;swal(&#123; title: &#x27;复制成功&#x27;, text: &quot;代码已复制，请遵守相关授权协议。\\n 转载请记得注明出处&quot;, icon: &#x27;success&#x27;, button: &quot;我承诺遵守&quot;,&#125;); 右键复制弹窗 这里需要设置两项内容： 链接地址复制弹窗 文本复制弹窗 均在 layout\\_partial\\rightmenu.ejs 文件中进行设置 链接地址复制弹窗 在上述文件末尾的 function copyString(str) &#123;&#125; 函数中 document.body.removeChild(input); 后面添加如下内容： layout\\_partial\\rightmenu.ejs1234567&lt;!-- 右键菜单栏复制弹窗 --&gt;swal(&#123; title: &#x27;复制成功&#x27;, text: &quot;文本/链接已复制，请遵守相关授权协议。\\n 转载请记得注明出处&quot;, icon: &#x27;success&#x27;, button: &quot;我承诺遵守&quot;,&#125;); 文本复制弹窗 还是在上述文件中，找到 if ('&lt;%= theme.plugins.clipboard.enable %&gt;' == 'true') &#123;&#125;将其设置为如下： layout\\_partial\\rightmenu.ejs12345678910111213if (&#x27;&lt;%= theme.plugins.clipboard.enable %&gt;&#x27; == &#x27;true&#x27;) &#123; &lt;!-- 文本复制弹窗 --&gt; let str_luosw = window.getSelection().toString(); copyText.style.display = &#x27;block&#x27;; hrText.style.display = &#x27;block&#x27;; &lt;!-- 文本复制弹窗 --&gt; copyText.addEventListener(&quot;click&quot;, function (e) &#123; copyString(str_luosw); &#125;, &#123; once: true &#125;);&#125; 网站弹窗+自动切换暗黑主题 这里需要设置的是 layout\\_partial\\scripts\\darkmode.ejs 。 首先在该文件开头第一行加入： layout\\_partial\\scripts\\darkmode.ejs1&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.jsdelivr.net/gh/hermitlsr/CDN@master/judge_time/js.js&quot;&gt;&lt;/script&gt; 再在文件底部 &lt;script&gt; 前加入： 查看代码 layout\\_partial\\scripts\\darkmode.ejs123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117&lt;!-- 自动夜间模式加弹窗 --&gt;// 自动夜间模式 if (navigator.geolocation) &#123; //获取地理位置 用于判断日出日落时间 navigator.geolocation.getCurrentPosition( function (position) &#123; var res = computeSunRiseSunSet(position.coords.latitude, position.coords.longitude, 8); console.log(res.str) adjust_time(res.strSunRise, res.strSunSet, &quot;08:00&quot;, &quot;12:00&quot;, &quot;14:00&quot;, &quot;23:00&quot;) &#125;, function (e) &#123; adjust_time(&quot;7:00&quot;, &quot;17:30&quot;, &quot;08:00&quot;, &quot;12:00&quot;, &quot;14:00&quot;, &quot;23:00&quot;) //未允许获取地理位置时，使用默认时间 console.log(&quot;未允许获取地理位置，使用默认配置时间&quot;) throw (e.message); &#125; ) &#125; function adjust_time(beginTime, endTime, morningTime, noonTime, afternoonTime, nightTime) &#123; const rootElement = document.documentElement; var strb = beginTime.split(&quot;:&quot;); if (strb.length != 2) &#123; return false; &#125; var stre = endTime.split(&quot;:&quot;); if (stre.length != 2) &#123; return false; &#125; var strmorning = morningTime.split(&quot;:&quot;); //12点 if (stre.length != 2) &#123; return false; &#125; var strnoon = noonTime.split(&quot;:&quot;); //12点 if (stre.length != 2) &#123; return false; &#125; var strafternoon = afternoonTime.split(&quot;:&quot;); //13点 if (stre.length != 2) &#123; return false; &#125; var strnight = nightTime.split(&quot;:&quot;); //23点 if (stre.length != 2) &#123; return false; &#125; var b = new Date(); var e = new Date(); var n = new Date(); var morning = new Date(); var noon = new Date(); var afternoon = new Date(); var night = new Date(); b.setHours(strb[0]); b.setMinutes(strb[1]); e.setHours(stre[0]); e.setMinutes(stre[1]); morning.setHours(strmorning[0]); morning.setMinutes(strmorning[1]); noon.setHours(strnoon[0]); noon.setMinutes(strnoon[1]); afternoon.setHours(strafternoon[0]); afternoon.setMinutes(strafternoon[1]); night.setHours(strnight[0]); night.setMinutes(strnight[1]); //在这里面处理获得的数据 if (n.getTime() - b.getTime() &gt; 0 &amp;&amp; n.getTime() - e.getTime() &lt; 0) &#123; var daytimetitle = &quot;&quot;; var daytimemessage = &quot;&quot;; if (n.getTime() - morning.getTime() &lt; 0) &#123; // 早上 daytimetitle = &quot;早安( •̀ ω •́ )✧&quot;; &#125; else if (n.getTime() - noon.getTime() &lt; 0) &#123; // 上午 daytimetitle = &quot;上午好§(*￣▽￣*)§&quot;; &#125; else if (n.getTime() - afternoon.getTime() &lt; 0) &#123; // 中午 daytimetitle = &quot;中午好( *︾▽︾)&quot;; daytimemessage = &quot;Hi~ o(*￣▽￣*)ブ要注意休息哦&quot;; &#125; else &#123; // 下午 daytimetitle = &quot;下午好&quot;; &#125; // 判断是否已经开启夜间模式 if (rootElement.getAttribute(&#x27;data-user-color-scheme&#x27;, &#x27;dark&#x27;)) &#123; // 已开启夜间模式，修改按钮状态 swal(&quot;操作通知&quot;, daytimetitle + &quot;，已自动为您切换为日间模式。&quot; + daytimemessage, &quot;success&quot;); const mode = toggleCustomDarkMode(); applyCustomDarkModeSettings(mode); &#125; else &#123; // 未开启夜间模式，不执行操作 swal(daytimetitle, daytimemessage, &quot;info&quot;); return true; &#125; &#125; else &#123; // 晚上 var nighttitle = &quot;&quot;; var nightmessage = &quot;&quot;; if (night.getTime() - n.getTime() &lt; 0 || n.getTime() - b.getTime() &lt; 0) &#123; nighttitle = &quot;夜深了&quot;; nightmessage = &quot;该睡觉啦(∪.∪ )...zzz&quot;; &#125; else &#123; nighttitle = &quot;晚上好&quot;; nightmessage = &quot;吃晚饭了吗？要注意眼睛哦(づ￣ 3￣)づ&quot;; &#125; // 判断是否已经开启夜间模式 if (rootElement.getAttribute(&#x27;data-user-color-scheme&#x27;, &#x27;dark&#x27;)) &#123; // 已开启夜间模式，不执行操作 swal(nighttitle, nightmessage, &quot;info&quot;); return true; &#125; else &#123; // 未开启夜间模式，修改按钮状态 swal(&quot;操作通知&quot;, nighttitle + &quot;，已自动为您切换为夜间模式。&quot; + nightmessage, &quot;success&quot;); const mode = toggleCustomDarkMode(); applyCustomDarkModeSettings(mode); &#125; &#125; &#125; 百宝箱页面设置 这是 Viggo 大佬制作的一个网站导航项目 WebStackPage，并由 HCLonely 制作为 hexo-theme-webstack 引用这个页面实际上是做一个新的主题网页，使用二级域名指向它。也可以做成分站形式，但是对于这样需要经常添加修改的网页不是很方便。 这里具体可以参考： 黑石大佬：为Hexo博客建立其他主题分站 诗颂：搭建Hexo-WebStack网址导航 我主要是在页面抬头位置添加了几个链接，并引入了心知天气插件，这部分也是参考了黑石大佬和TRXH的百宝箱页面。 在主题文件夹下设置 themes/webstack/index.js 文件： themes/webstack/index.js123456789101112&lt;li class=&quot;hover-line&quot; style=&quot;min-height: 75px;&quot;&gt; &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;http://localhost:500&quot;&gt;博客首页&lt;/a&gt; &lt;!--https://www.hermitlsr.top--&gt;&lt;/li&gt;&lt;li class=&quot;hover-line&quot; style=&quot;min-height: 75px;&quot;&gt; &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://www.hermitlsr.top/categories/&quot;&gt;文章分类 &lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;hover-line&quot; style=&quot;min-height: 75px;&quot;&gt; &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://www.hermitlsr.top/messages/&quot;&gt;留言灌水 &lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;hover-line&quot; style=&quot;min-height: 75px;&quot;&gt; &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://www.hermitlsr.top/friends/&quot;&gt;友情链接 &lt;/a&gt;&lt;/li&gt; 引入心知天气插件，这部分主题代码可以直接在心知天气官网生成： themes/webstack/index.js123456789101112131415161718 &lt;li class=&quot;hover-line&quot; style=&quot;min-height: 75px; &quot;&gt; &lt;div id=&quot;tp-weather-widget&quot; style=&quot;padding: 25px 20px !important; &quot;&gt;&lt;/div&gt; &lt;script&gt; (function(a,h,g,f,e,d,c,b)&#123;b=function()&#123;d=h.createElement(g);c=h.getElementsByTagName(g)[0];d.src=e;d.charset=&quot;utf-8&quot;;d.async=1;c.parentNode.insertBefore(d,c)&#125;;a[&quot;SeniverseWeatherWidgetObject&quot;]=f;a[f]||(a[f]=function()&#123;(a[f].q=a[f].q||[]).push(arguments)&#125;);a[f].l=+new Date();if(a.attachEvent)&#123;a.attachEvent(&quot;onload&quot;,b)&#125;else&#123;a.addEventListener(&quot;load&quot;,b,false)&#125;&#125;(window,document,&quot;script&quot;,&quot;SeniverseWeatherWidget&quot;,&quot;//cdn.sencdn.com/widget2/static/js/bundle.js?t=&quot;+parseInt((new Date().getTime() / 100000000).toString(),10))); window.SeniverseWeatherWidget(&#x27;show&#x27;, &#123; flavor: &quot;slim&quot;, location: &quot;&quot;, geolocation: true, language: &quot;zh-Hans&quot;, unit: &quot;c&quot;, theme: &quot;auto&quot;, token: &quot;&quot;, hover: &quot;enabled&quot;, container: &quot;tp-weather-widget&quot; &#125;) &lt;/script&gt; &lt;/li&gt;&lt;/ul&gt; 注意 style=&quot;padding: 29px 20px; 这里设置的数值是为了使其与其他元素保持水平。 由于心知天气会自定义样式，为了保持样式一致，还重新定义了字体颜色，在 source\\css\\hclonely.css 中设置如下： source\\css\\hclonely.css123.dsrBSL &#123; color: #979898 !important;&#125; 导航栏全屏以及页面透明度 导航栏全屏 当时看到几个博客页面导航栏占据全屏之后设置透明效果还蛮好看，就迫不及待自己搞一搞，当然纯靠 F12 的方法失败了，最后这个是 inkss 大佬提供的方法。后面又去 Volantis 官方文档里翻东西的时候偶然发现这个问题在鸣谢板块的评论区有一个很长的讨论，更觉得当时自己很憨了。 在 \\source\\css\\_layout\\main.styl 文件下按上述方法进行设置： \\source\\css\\_layout\\main.styl12345.l_header @media screen and (max-width: $device-2k) left: 0 !important border-radius: 0 !important max-width: 100% !important 在添加对移动端的设置 \\source\\css\\_layout\\main.styl12345678910111213141516// 调整移动端的显示#safearea @media screen and (max-width: $device-mobile) margin: 16px 0 0 !important box-shadow: none !important #l_main article#comments, article#friends, article#post, article#page, article#arc border-radius: 0 !important margin-top: -16px !important article#cat, article#tag margin: -16px -16px 0 !important 页面透明度 这里使用了 F12 大法。页面透明度这里需要对 导航栏，侧边栏以及文章主体 三个位置分别进行设置。这里顺便调整了侧边栏的宽度。 \\source\\css\\_layout\\main.styl12345678910111213.l_header.auto.show &#123; opacity: 0.85 !important;&#125;.l_side &#123; opacity: 0.9 !important; width: 300px !important; //不合适的设置&#125;.l_main &#123; opacity: 0.95 !important; width: calc(100% - 1 * 300px) !important; //不合适的设置&#125; 另外侧边栏宽度和文章总宽度在 Volantis 主题中有一个总长度设置：max_width: 1270px。 页面宽度的设置已经取消了，由于固定了 .l_side 在移动端的距离就不会自动变化，就会导致 .l_main 部分变窄。这里直接修改 layout.styl ，其定义了侧边栏的基本参数，位于 volantis\\source\\css\\_defines\\layout.styl 。将其中 $sidebar 这个参数设置为 260px 念两句诗 Volantis 主题本身就集成了一个每日一诗 在侧边栏的 blogger 中，在下想用这类似的插件来修饰页面，于是就引入了 今日诗词 插件： 首先设置样式 在 \\source\\css\\_layout\\main.styl 中加入： 查看代码 \\source\\css\\_layout\\main.styl12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849// 念两句诗.poem-wrap &#123; position: relative !important; width: 730px !important; max-width: 80% !important; border: 2px solid #797979 !important; border-top: none !important; text-align: center !important; margin: 80px auto !important;&#125;.poem-left &#123; left: 0 !important;&#125;.poem-right &#123; right: 0!important;&#125;.poem-border &#123; position: absolute !important; height: 2px!important; width: 35%!important; //调整框线的长度 background-color: #797979!important;&#125;.poem-wrap p &#123; width: 70%!important; margin: auto!important; line-height: 30px!important; color: #797979!important;&#125;.poem-wrap h1 &#123; position: relative!important; margin-top: -100px!important; display: inline-block!important; letter-spacing: 12px!important; color: #797979!important; border-bottom: 1px solid rgba(68,68,68,0) !important;&#125;.poem-wrap p#poem &#123; font-size: 25px!important; text-align: center !important;&#125;.poem-wrap p#info &#123; font-size: 15px!important; margin: 15px auto!important; text-align: center !important;&#125; 在需要的地方加入 Html 语句 具体细节可以参考 今日诗词官网 12345678910111213141516&lt;div class=&quot;poem-wrap&quot;&gt; &lt;div class=&quot;poem-border poem-left&quot;&gt;&lt;/div&gt; &lt;div class=&quot;poem-border poem-right&quot;&gt;&lt;/div&gt; &lt;h1&gt;留言板&lt;/h1&gt; &lt;p id=&quot;poem&quot;&gt;&lt;/p&gt; &lt;p id=&quot;info&quot;&gt;&lt;/p&gt; &lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; jinrishici.load(function(result) &#123; var sentence = document.querySelector(&quot;#poem&quot;) var info_in = document.querySelector(&quot;#info&quot;) sentence.innerHTML = result.data.content info_in.innerHTML = &#x27;【&#x27; + result.data.origin.dynasty + &#x27;】&#x27; + result.data.origin.author + &#x27;《&#x27; + result.data.origin.title + &#x27;》&#x27; &#125;); &lt;/script&gt; &lt;/div&gt; 页面的头像信息设置 这里参考了 TRHX 大佬的样式，然后直接用了一个较为简单的方法呈现出来： 123&lt;center&gt;&lt;a href=&quot;https://hermitlsr.top/about/&quot;&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hermitlsr/image-for-hermitlsr.top/web/rickavatar.png&quot; width=&quot;100&quot; height=&quot;100&quot;&gt; &lt;/a&gt;&lt;/center&gt;&lt;center&gt;&lt;a href=&quot;https://www.hermitlsr.top/atom.xml&quot; rel=&quot;RSS&quot; target=&quot;_blank&quot; title=&quot;RSS&quot;&gt;&lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;mailto:1165749128@qq.com&quot; rel=&quot;Email&quot; target=&quot;_blank&quot; title=&quot;Email&quot;&gt;&lt;i class=&quot;fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/hermitlsr&quot; rel=&quot;GitHub&quot; target=&quot;_blank&quot; title=&quot;GitHub&quot;&gt;&lt;i class=&quot;fab fa-github&quot;&gt;&lt;/i&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;http://wpa.qq.com/msgrd?v=3&amp;amp;uin=1165749128&amp;amp;site=qq&amp;amp;menu=yes&quot; rel=&quot;QQ&quot; target=&quot;_blank&quot; title=&quot;QQ&quot;&gt;&lt;i class=&quot;fab fa-qq&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/center&gt; 公式加载问题 安装配置 KaTeX 基本没有问题 ，但是公式渲染还是有问题，这里根据官方推荐，参考了 https://www.micdz.cn/article/katex-on-volantis/ ，完美解决。做法就是在 themes\\volantis\\layout\\_partial\\head.ejs 文件的最后添加： themes\\volantis\\layout\\_partial\\head.ejs12345678&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css&quot; integrity=&quot;sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq&quot; crossorigin=&quot;anonymous&quot;&gt; &lt;!-- The loading of KaTeX is deferred to speed up page rendering --&gt;&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.js&quot; integrity=&quot;sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; &lt;!-- To automatically render math in text elements, include the auto-render extension: --&gt;&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/auto-render.min.js&quot; integrity=&quot;sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI&quot; crossorigin=&quot;anonymous&quot; onload=&quot;renderMathInElement(document.body);&quot;&gt;&lt;/script&gt; 电子时钟部件 使用了插件：hexo-electric-clock 参考了： https://zfe.space/post/hexo-electric-clock.html 该插件可以自动获取访问者的 ip 地址，同时以此 ip 地址展示天气时间等信息 步骤： 下载该插件 配置插件 调整 css 样式 下载该插件 1npm i hexo-electric-clock --save 按照参考中的建议，需要加上 --save 否则本地预览可能不生效。 插件配置 在博客根目录的配置文档 _config.yml 中 加入： ../_config.yml12345678910# 电子钟electric_clock: priority: 10 enable: true enable_page: all layout: type: id name: clock index: 0 temple_html: &#x27;&lt;div class=&quot;card-widget card-clock&quot;&gt;&lt;div class=&quot;card-glass&quot;&gt;&lt;div class=&quot;card-background&quot;&gt;&lt;div class=&quot;card-content&quot;&gt;&lt;div id=&quot;hexo_electric_clock&quot;&gt;&lt;img id=&quot;card-clock-loading&quot; src=&quot;https://cdn.jsdelivr.net/gh/Zfour/Butterfly-clock/clock/images/weather/loading.gif&quot; style=&quot;height: 120px; width: 100%;&quot; data-ll-status=&quot;loading&quot; class=&quot;entered loading&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&#x27; 主要需要修改的地方是 layout ，它决定了电子时钟的具体位置。type 有两个选项 class 和 id 对应着 Html 中的两种属性。其中 class 不具有唯一性，在一个小块中，常常有多个 class 嵌套，这就需要使用 index 指定是第几个 class 。这里为求方便，我在需要展示电子钟的位置新增了 一个id。 我希望放的位置是侧边栏的公告栏部分，在 Volantis 主题中，这是以文本部件的形式呈现 ( class: widget text shadow floatable desktop )，需要在 content 部分增加 id 。在主题文件夹中找到 ..\\volantis\\layout\\_widget\\text.ejs 文件，在第4行 &lt;div class='content'&gt; 之后加入： ..\\volantis\\layout\\_widget\\text.ejs12&lt;div id=&quot;clock&quot;&gt;&lt;/div&gt;&lt;div id=&quot;clock&quot;&gt;&lt;/div&gt; 在其他部件中加入同理。 调整 css 样式 这里是根据自己的喜好进行设置。 在主题文件 \\source\\css\\_layout\\main.styl 文件中加入： \\source\\css\\_layout\\main.styl1234.card-background &#123; height: auto !important; margin: 0px !important;&#125; 当然，也可以在插件的 css 中直接修改，位置是 ..\\node_modules\\hexo-electric-clock\\clock.css 增加朋友圈 该功能由小冰大佬完成的，可以将友链网站中更新的文章集中展示，目前支持 volantis、butterfly 等五个主题的友链爬取，以及github和gitee友链的爬取，已经更新到 beta1.5 还在继续开发，可参见: 原项目地址：https://github.com/Rock-Candy-Tea/hexo-circle-of-friends 配置教程：https://zfe.space/post/friend-link-circle.html 配置的过程中遇到一些坑 _config.yml 中的 github 和 gitee 都需要取消注释，不需要的部分设置 enable=false。 如果在自己的友链界面加入了自己的链接，可以设置 if user_info[1] != '你的链接': ，排除自己的文章。 配置好后，一般是整点开始爬取，所以会延迟生效，不用担心没配置好。 在 volantis 中配置只需要新建一个 page ，然后加入 &lt;div id=&quot;moments_container&quot;&gt;&lt;script src=&quot;/js/moments.js&quot;&gt;&lt;/script&gt;&lt;/div&gt; 即可。 文章永久链接 之前采用重设 urlname 的方式避免中文标题的编码问题，但是每次写文章都要自己输入一次，太麻烦。现在采用 hexo-abbrlink 插件进行生成。仅需在站点根目录的 _config.yml 中做如下设置 \\_config.yml1234permalink: :year-:month-:day/:abbrlink.html abbrlink: alg: crc32 #算法： crc16(default) and crc32 rep: hex #进制： dec(default) and hex 最终生成的本文链接形式：http://www.hermitlsr.top/2021-06-26/40ecd548.html …未完待续","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.hermitlsr.top/categories/Hexo/"},{"name":"建站","slug":"Hexo/建站","permalink":"https://www.hermitlsr.top/categories/Hexo/%E5%BB%BA%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.hermitlsr.top/tags/Hexo/"},{"name":"Volantis","slug":"Volantis","permalink":"https://www.hermitlsr.top/tags/Volantis/"}]},{"title":"时序分析-ARMA(1,1)和AR(2)自相关函数的R语言实现","slug":"时序分析-ARMA(1,1)和AR(2)自相关函数的R语言实现","date":"2021-06-23T14:05:58.000Z","updated":"2021-07-13T04:04:35.975Z","comments":false,"path":"2021-06-23/69ad6eed.html","link":"","permalink":"https://www.hermitlsr.top/2021-06-23/69ad6eed.html","excerpt":"学习《时间序列分析及应用·Jonathan D.Cryer &amp; Kung-Sik Chan 著》一书时的相关笔记——本文介绍了ARMA(1,1)模型和AR(2)模型的自相关函数的R语言实现。","text":"学习《时间序列分析及应用·Jonathan D.Cryer &amp; Kung-Sik Chan 著》一书时的相关笔记——本文介绍了ARMA(1,1)模型和AR(2)模型的自相关函数的R语言实现。 ARMA(1,1)模型 ARMA(1,1)模型的自相关函数 模型定义的方程是： Yt=ϕYt−1+et−θet−1Y_t=\\phi Y_{t-1}+e_t-\\theta e_{t-1} Yt​=ϕYt−1​+et​−θet−1​ 为得到Yule-Walk形式的方程组，首先： E(etYt)=E(et(ϕYt−1+et−θet−1))=σe2E(e_tY_t)=E(e_t(\\phi Y_{t-1}+e_t-\\theta e_{t-1}))=\\sigma^2_e E(et​Yt​)=E(et​(ϕYt−1​+et​−θet−1​))=σe2​ 或 E(et−1Yt)=E(et−1(ϕYt−1+et−θet−1))=(ϕ−θ)σe2E(e_{t-1}Y_t)=E(e_{t-1}(\\phi Y_{t-1}+e_t-\\theta e_{t-1}))=(\\phi-\\theta)\\sigma^2_e E(et−1​Yt​)=E(et−1​(ϕYt−1​+et​−θet−1​))=(ϕ−θ)σe2​ 在其定义式两边乘以Yt−kY_{t-k}Yt−k​并求期望值，得到： γ0=ϕγ1+[1−θ(ϕ−θ)σe2]γ1=ϕγ0−θσe2γk=ϕγk−1}\\left.\\begin{aligned} \\gamma_0 &amp; =\\phi\\gamma_1+[1-\\theta(\\phi-\\theta)\\sigma^2_e]\\\\ \\gamma_1 &amp; = \\phi\\gamma_0-\\theta\\sigma^2_e\\\\ \\gamma_k &amp; =\\phi\\gamma_{k-1} \\end{aligned} \\right \\} γ0​γ1​γk​​=ϕγ1​+[1−θ(ϕ−θ)σe2​]=ϕγ0​−θσe2​=ϕγk−1​​⎭⎪⎬⎪⎫​ 求解前两个方程得到： γ0=1−2ϕθ+θ21−ϕ2σe2\\gamma_0=\\frac{1-2\\phi\\theta+\\theta^2}{1-\\phi^2}\\sigma^2_e γ0​=1−ϕ21−2ϕθ+θ2​σe2​ 进一步通过递推关系式，得到: ρk=(1−θϕ)(ϕ−θ)1−2ϕθ+θ2ϕk−1，k&gt;1\\rho_k=\\frac{(1-\\theta\\phi)(\\phi-\\theta)}{1-2\\phi\\theta+\\theta^2}\\phi^{k-1}，k&gt;1 ρk​=1−2ϕθ+θ2(1−θϕ)(ϕ−θ)​ϕk−1，k&gt;1 值得注意的是，随着之后长度kkk的增加，该模型的相关函数指数递减。相关函数的初始值ρ0=0\\rho_0=0ρ0​=0，从ρk\\rho_kρk​的递推式中可以看到，它的形状依赖于ρ1\\rho_1ρ1​和ϕ\\phiϕ的符号。 ARMA(1,1)模型自相关函数的R语言函数 按照前述中的递推式可构造求解ARMA(1,1)模型自相关函数并画出其自相关图像的函数 ARMA1.1 &lt;- function(phi=phi, theta=theta, max.lag=20, pic=T, ylim=NULL) 12345678910111213ARMA1.1 &lt;- function(phi=phi, theta=theta, max.lag=20, pic=T, ylim=NULL)&#123; rho = NULL rho[1] &lt;- 1 for (k in 1:max.lag) &#123; rho[k+1] &lt;- (1-theta*phi)*(phi-theta)/(1-2*theta*phi+theta^2)*phi^(k-1) &#125; if(pic == T)&#123; plot(x = 1:max.lag, y = rho[-1], type = &quot;h&quot;, xlab = &quot;Lag&quot;, ylab = &quot;ACF&quot;, ylim = ylim) abline(h=0) &#125; out &lt;- list(phi = phi, theta = theta, rho = rho)&#125; 该函数包含五个参数: phi ARMA(1,1)模型中自回归部分的系数，即ϕ\\phiϕ. theta ARMA(1,1)模型中滑动平均部分的系数，即θ\\thetaθ. max.lag ARMA(1,1)模型中需要求解的最大滞后长度k，默认为k=20k=20k=20. pic 逻辑值，pic=T时绘制自相关函数图像，默认pic=T. ylim 一个二维的向量，作为绘制自相关函数图像的纵坐标范围，默认为ylim=NULL 该函数的输出为一个列表，其中phi为输入的phi，theta为输入的theta，rho为计算所得的max.lag+1个自相关函数（第一个为ρ0=1\\rho_0=1ρ0​=1）。 AR(2)模型 AR(2)模型的自相关函数 模型定义的方程是： Yt=ϕ1Yt−1+ϕ2Yt−2+etY_t=\\phi_1Y_{t-1}+\\phi_2Y_{t-2}+e_t Yt​=ϕ1​Yt−1​+ϕ2​Yt−2​+et​ 为推导其自相关函数，在其两边乘上Yt−kY_{t-k}Yt−k​，并求期望。假定平稳、零均值，并且ete_tet​独立于Yt−1Y_{t-1}Yt−1​,得到： γk=ϕ1γk−1+ϕ2γk−2，k=1,2,3,⋯\\gamma_k=\\phi_1\\gamma_{k-1}+\\phi_2\\gamma_{k-2}，k=1,2,3,\\cdots γk​=ϕ1​γk−1​+ϕ2​γk−2​，k=1,2,3,⋯ 两边再除以γ0\\gamma_0γ0​， ρk=ϕ1ρk−1+ϕ2ρk−2，k=1,2,3,⋯\\rho_k=\\phi_1\\rho_{k-1}+\\phi_2\\rho{k-2}，k=1,2,3,\\cdots ρk​=ϕ1​ρk−1​+ϕ2​ρk−2，k=1,2,3,⋯ 称上述方程为Yule-Walker方程。 下面需求解 k=1k=1k=1 和 k=2k=2k=2 时对应的ρ\\rhoρ值。首先令 k=1k=1k=1，因 ρ0=1，ρ−1=ρ1\\rho_0=1，\\rho_{-1}=\\rho_1ρ0​=1，ρ−1​=ρ1​，得到 ρ1=ϕ1+ϕ2ρ2\\rho_1=\\phi_1+\\phi_2\\rho_2ρ1​=ϕ1​+ϕ2​ρ2​ ，整理得： ρ1=ϕ11−ϕ2\\rho_1=\\frac{\\phi_1}{1-\\phi_2} ρ1​=1−ϕ2​ϕ1​​ 再令 k=2k=2k=2，将上式带入Yule-Walker方程中，得出 ρ2=ϕ2(1−ϕ2)+ϕ121−ϕ2\\rho_2=\\frac{\\phi_2(1-\\phi_2)+\\phi_1^2}{1-\\phi_2} ρ2​=1−ϕ2​ϕ2​(1−ϕ2​)+ϕ12​​ 至此我们可以通过Yule-Walker方程求出AR(2)模型的自相关函数。 下面在给出计算ρk\\rho_kρk​的显示表达： ρk=(1−G22)G1k+1−(1−G12)G2k+1(G1−G2)(1+G1G2)，k≥0\\rho_k=\\frac{(1-G^2_2)G^{k+1}_1-(1-G^2_1)G^{k+1}_2}{(G_1-G_2)(1+G_1G_2)}，k\\ge 0 ρk​=(G1​−G2​)(1+G1​G2​)(1−G22​)G1k+1​−(1−G12​)G2k+1​​，k≥0 其中，G1=ϕ−ϕ12+4ϕ22G1=\\frac{\\phi-\\sqrt{\\phi^2_1+4\\phi_2}}{2}G1=2ϕ−ϕ12​+4ϕ2​​​、G2=ϕ+ϕ12+4ϕ22G2=\\frac{\\phi+\\sqrt{\\phi^2_1+4\\phi_2}}{2}G2=2ϕ+ϕ12​+4ϕ2​​​ 特别地，当ϕ12+4ϕ2&lt;0\\phi^2_1+4\\phi_2&lt;0ϕ12​+4ϕ2​&lt;0时，其可表示为： ρk=Rksin(Θk+Φ)sin(Φ)，k≥0\\rho_k=R^k\\frac{sin(\\Theta k+\\Phi)}{sin(\\Phi)}，k\\ge 0 ρk​=Rksin(Φ)sin(Θk+Φ)​，k≥0 其中，R=−ϕ2R=\\sqrt{-\\phi_2}R=−ϕ2​​ 为阻尼因子，Θ=arccos(ϕ1/(2−ϕ2))\\Theta=arccos(\\phi_1/(2\\sqrt{-\\phi_2}))Θ=arccos(ϕ1​/(2−ϕ2​​)) 为频率，Φ=arctan[(1−ϕ2)/(1+ϕ2)]\\Phi=arctan[(1-\\phi_2)/(1+\\phi_2)]Φ=arctan[(1−ϕ2​)/(1+ϕ2​)] AR(2)模型自相关函数的R语言函数 按照前述中的递推式可构造求解AR(2)模型自相关函数并画出其自相关图像的函数 AR2 &lt;- function(phi1=phi1, phi2=phi2, max.lag = 20, pic = T, ylim=c(-1,1))，此函数还可求出其特征根为复数时的阻尼因子RRR和Θ\\ThetaΘ。 12345678910111213141516171819202122232425262728293031AR2 &lt;- function(phi1=phi1, phi2=phi2, max.lag = 20, pic = T, ylim=c(-1,1))&#123; rho = NULL;root=NULL; rho1 &lt;- phi1/(1-phi2) rho2 &lt;- (phi2*(1-phi2)+phi1^2)/(1-phi2) rho[1] &lt;- rho1 rho[2] &lt;- rho2 for (k in 3:max.lag) &#123; rho[k] &lt;- phi1*rho[k-1]+phi2*rho[k-2] &#125; if(pic == T)&#123; plot(x = 1:max.lag, y = rho, type = &quot;h&quot;, xlab = &quot;Lag&quot;, ylab = &quot;ACF&quot;, ylim = ylim) abline(h=0) &#125; if(phi1^2+4*phi2 &lt; 0)&#123; root1 &lt;- (phi1+sqrt(as.complex(phi1^2+4*phi2)))/(-2*phi2) root2 &lt;- (phi1-sqrt(as.complex(phi1^2+4*phi2)))/(-2*phi2) R &lt;- sqrt(-phi2) Theta &lt;- acos(phi1/2*sqrt(-phi2)) &#125;else&#123; root1 &lt;- (phi1+sqrt(phi1^2+4*phi2))/(-2*phi2) root2 &lt;- (phi1-sqrt(phi1^2+4*phi2))/(-2*phi2) R &lt;- NULL Theta &lt;-NULL &#125; out &lt;- list(phi=c(phi1,phi2), rho = rho, root = c(root1, root2), R = R, Theta = Theta)&#125; 该函数包含五个参数: phi1,phi2 AR(2)模型中的两个参数，即ϕ1，ϕ2\\phi_1，\\phi_2ϕ1​，ϕ2​. max.lag AR(2)模型中需要求解的最大滞后长度k，默认为k=20k=20k=20. pic 逻辑值，pic=T时绘制自相关函数图像，默认pic=T. ylim 一个二维的向量，作为绘制自相关函数图像的纵坐标范围，默认为ylim=c(-1,1) 该函数的输出为一个列表，其中phi为输入的phi为输入的两个参数，rho为计算所得的max.lag个自相关函数，root为特征方程的两个根，R为阻尼系数，Theta为频率。","categories":[{"name":"时序分析","slug":"时序分析","permalink":"https://www.hermitlsr.top/categories/%E6%97%B6%E5%BA%8F%E5%88%86%E6%9E%90/"},{"name":"学习笔记","slug":"时序分析/学习笔记","permalink":"https://www.hermitlsr.top/categories/%E6%97%B6%E5%BA%8F%E5%88%86%E6%9E%90/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/tags/R/"},{"name":"时序分析","slug":"时序分析","permalink":"https://www.hermitlsr.top/tags/%E6%97%B6%E5%BA%8F%E5%88%86%E6%9E%90/"},{"name":"ARMA","slug":"ARMA","permalink":"https://www.hermitlsr.top/tags/ARMA/"}]},{"title":"R语言的久远学习笔记--图形功能","slug":"Long-term-study-notes-of-R-2021-06-23-R语言的久远学习笔记-R语言图形功能","date":"2021-06-23T03:58:21.000Z","updated":"2021-07-13T04:49:06.722Z","comments":false,"path":"2021-06-23/4a9bb1b.html","link":"","permalink":"https://www.hermitlsr.top/2021-06-23/4a9bb1b.html","excerpt":"这是曾经R语言软件课程的简单笔记的概率函数部分，整理至此。可以先查看两组两组例子，感受一下： demo(graphics)、demo(persp)","text":"这是曾经R语言软件课程的简单笔记的概率函数部分，整理至此。可以先查看两组两组例子，感受一下： demo(graphics)、demo(persp) 高级绘图函数 向日葵花型图 sunflowerplot 以相似坐标的点作为花朵，其花瓣数目为点的个数 123456789101112131415161718192021222324252627282930313233343536## my understandx &lt;- rep(2, 10);y &lt;- rep(2, 10)sunflowerplot(x, y)x &lt;- rep(2, 10);y &lt;- rep(3, 10)sunflowerplot(x, y)x &lt;- rep(1:5, 5); y &lt;- rep(3, 25)sunflowerplot(x, y)## 实例require(stats) # for rnormrequire(grDevices)## &#x27;number&#x27; is computed automatically:sunflowerplot(iris[, 3:4])## Imitating Chambers et al, p.109, closely:sunflowerplot(iris[, 3:4], cex = .2, cex.fact = 1, size = .035, seg.lwd = .8)## orsunflowerplot(Petal.Width ~ Petal.Length, data = iris, cex = .2, cex.fact = 1, size = .035, seg.lwd = .8)sunflowerplot(x = sort(2*round(rnorm(100))), y = round(rnorm(100), 0), main = &quot;Sunflower Plot of Rounded N(0,1)&quot;)## Similarly using a &quot;xyTable&quot; argument:xyT &lt;- xyTable(x = sort(2*round(rnorm(100))), y = round(rnorm(100), 0), digits = 3)utils::str(xyT, vec.len = 20)sunflowerplot(xyT, main = &quot;2nd Sunflower Plot of Rounded N(0,1)&quot;)## A &#x27;marked point process&#x27; &#123;explicit &#x27;number&#x27; argument&#125;:sunflowerplot(rnorm(100), rnorm(100), number = rpois(n = 100, lambda = 2), main = &quot;Sunflower plot (marked point process)&quot;, rotate = TRUE, col = &quot;blue4&quot;) 饼图、箱图 饼图不宜多用，一般用于比较各部分的占比情况 箱图常用于同一类数据的比较，可以看到数据分布和数据量，有横向和纵向两种。 对于图像的颜色填充可使用rainbow()设定 12345678910111213141516171819202122232425262728293031323334require(grDevices)pie(rep(1, 24), col = rainbow(24), radius = 1)pie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)names(pie.sales)&lt;-c(&quot;Blueberry&quot;,&quot;Cherry&quot;,&quot;Apple&quot;, &quot;Boston Cream&quot;, &quot;Other&quot;, &quot;Vanilla Cream&quot;)pie(pie.sales) # default colourspie(pie.sales, density = 10, angle = 15 + 10 * 1:6)pie(pie.sales, clockwise = TRUE, main = &quot;pie(*, clockwise = TRUE)&quot;)segments(0, 0, 0, 1, col = &quot;red&quot;, lwd = 2)text(0, 1, &quot;init.angle = 90&quot;, col = &quot;red&quot;)## 另一个例子par(mfrow = c(2,2))slices &lt;- c(10,12,4,16,8) # 数据lbls &lt;- c(&quot;US&quot;,&quot;UK&quot;,&quot;Australis&quot;,&quot;Germany&quot;,&quot;France&quot;) # 标签数据pie(slices,lbls) # 基本饼图pct &lt;- round(slices/sum(slices)*100) # 数据比例lbls2 &lt;- paste(lbls,&quot; &quot;,pct ,&quot;%&quot;,sep = &quot;&quot;)pie(slices,labels = lbls2,col = rainbow(length(lbls2)), # rainbow是一个彩虹色调色板 main = &quot;Pie Chart with Percentages&quot;)library(plotrix)pie3D(slices,labels=lbls,explode=0.1,main=&quot;3D pie chart&quot;) # 三维饼图mytable &lt;- table (state.region)lbls3 &lt;- paste(names(mytable),&quot;\\n&quot;,mytable,sep = &quot;&quot;)pie(mytable,labels = lbls3, main = &quot;pie chart from a table \\n (with sample sizes&quot;) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354boxplot(mtcars$mpg,main=&quot;Box plot&quot;, ylab =&quot;Miles per Gallon&quot;) # 标准箱线图boxplot(mpg ~ cyl,data= mtcars, main=&quot;car milesge data&quot;, xlab= &quot;Number of cylinders&quot;, ylab= &quot;Miles per Gallon&quot;)boxplot(mpg ~ cyl,data= mtcars, notch=TRUE, # 含有凹槽的箱线图 varwidth = TRUE, # 宽度和样本大小成正比 col= &quot;red&quot;, main=&quot;car milesge data&quot;, xlab= &quot;Number of cylinders&quot;, ylab= &quot;Miles per Gallon&quot;)mtcars$cyl.f&lt;- factor(mtcars$cyl, # 转换成因子结构 levels= c(4,6,8), labels = c(&quot;4&quot;,&quot;6&quot;,&quot;8&quot;))mtcars$am.f &lt;- factor(mtcars$am,levels = c(0,1), labels = c(&quot;auto&quot;,&quot;standard&quot;))boxplot(mpg~ am.f*cyl.f, # 分组的箱线图 data = mtcars, varwidth=TRUE, col= c(&quot;gold&quot;,&quot;darkgreen&quot;), main= &quot;MPG Distribution by Auto Type&quot;, xlab=&quot;Auto Type&quot;, ylxb=&quot;Miles per Gallon&quot;)boxplot(len ~ dose, data = ToothGrowth, boxwex = 0.25, at = 1:3 - 0.2, subset = supp == &quot;VC&quot;, col = &quot;yellow&quot;, main = &quot;Guinea Pigs&#x27; Tooth Growth&quot;, xlab = &quot;Vitamin C dose mg&quot;, ylab = &quot;tooth length&quot;, xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = &quot;i&quot;)boxplot(len ~ dose, data = ToothGrowth, add = TRUE, boxwex = 0.25, at = 1:3 + 0.2, subset = supp == &quot;OJ&quot;, col = &quot;orange&quot;)legend(2, 9, c(&quot;Ascorbic acid&quot;, &quot;Orange juice&quot;), fill = c(&quot;yellow&quot;, &quot;orange&quot;))boxplot(len ~ dose:supp, data = ToothGrowth, boxwex = 0.5, col = c(&quot;orange&quot;, &quot;yellow&quot;), main = &quot;Guinea Pigs&#x27; Tooth Growth&quot;, xlab = &quot;Vitamin C dose mg&quot;, ylab = &quot;tooth length&quot;, sep = &quot;:&quot;, lex.order = TRUE, ylim = c(0, 35), yaxs = &quot;i&quot;) stripchart() 将x画在一条直线上 对于数据量较小时可以作为箱型图的替代 stripchart(x, data = NULL, dlab = NULL, ...,subset, na.action = NULL) 12345678910111213141516x &lt;- stats::rnorm(50)xr &lt;- round(x, 1)stripchart(x) ; m &lt;- mean(par(&quot;usr&quot;)[1:2])text(m, 1.04, &quot;stripchart(x, \\&quot;overplot\\&quot;)&quot;)stripchart(xr, method = &quot;stack&quot;, add = TRUE, at = 1.2)text(m, 1.35, &quot;stripchart(round(x,1), \\&quot;stack\\&quot;)&quot;)stripchart(xr, method = &quot;jitter&quot;, add = TRUE, at = 0.7)text(m, 0.85, &quot;stripchart(round(x,1), \\&quot;jitter\\&quot;)&quot;)stripchart(decrease ~ treatment, main = &quot;stripchart(OrchardSprays)&quot;, vertical = TRUE, log = &quot;y&quot;, data = OrchardSprays)stripchart(decrease ~ treatment, at = c(1:8)^2, main = &quot;stripchart(OrchardSprays)&quot;, vertical = TRUE, log = &quot;y&quot;, data = OrchardSprays) coplot(x~y|z)给定z绘制(x,y)的散点图 12345678910111213141516171819202122232425262728293031## Tonga Trench Earthquakescoplot(lat ~ long | depth, data = quakes)given.depth &lt;- co.intervals(quakes$depth, number = 4, overlap = .1)coplot(lat ~ long | depth, data = quakes, given.v = given.depth, rows = 1)## Conditioning on 2 variables:ll.dm &lt;- lat ~ long | depth * magcoplot(ll.dm, data = quakes)coplot(ll.dm, data = quakes, number = c(4, 7), show.given = c(TRUE, FALSE))coplot(ll.dm, data = quakes, number = c(3, 7), overlap = c(-.5, .1)) # negative overlap DROPS values## given two factorsIndex &lt;- seq(length = nrow(warpbreaks)) # to get nicer default labelscoplot(breaks ~ Index | wool * tension, data = warpbreaks, show.given = 0:1)coplot(breaks ~ Index | wool * tension, data = warpbreaks, col = &quot;red&quot;, bg = &quot;pink&quot;, pch = 21, bar.bg = c(fac = &quot;light blue&quot;))## Example with empty panels:win.graph()with(data.frame(state.x77), &#123;coplot(Life.Exp ~ Income | Illiteracy * state.region, number = 3, panel = function(x, y, ...) panel.smooth(x, y, span = .8, ...))## y ~ factor -- not really sensible, but &#x27;show off&#x27;:coplot(Life.Exp ~ state.region | Income * state.division, panel = panel.smooth)&#125;) interaction.plot(f1, f2, y, fun=mean) 以f1(因子)为横坐标，fun(y|f2)为纵坐标绘制相应的f2(因子)的图像 123456789101112131415161718require(graphics)with(ToothGrowth, &#123;interaction.plot(dose, supp, len, fixed = TRUE)dose &lt;- ordered(dose)interaction.plot(dose, supp, len, fixed = TRUE, col = 2:3, leg.bty = &quot;o&quot;)interaction.plot(dose, supp, len, fixed = TRUE, col = 2:3, type = &quot;p&quot;)&#125;)with(OrchardSprays, &#123; interaction.plot(treatment, rowpos, decrease) interaction.plot(rowpos, treatment, decrease, cex.axis = 0.8) ## order the rows by their mean effect rowpos &lt;- factor(rowpos, levels = sort.list(tapply(decrease, rowpos, mean))) interaction.plot(rowpos, treatment, decrease, col = 2:9, lty = 1)&#125;) matplot() 二元图，x的第一列对应y的第一列，以此类推绘制图像 12345x &lt;- matrix(rep(1:10, 5), ncol = 5)y &lt;- matrix(seq(50), ncol = 5)matplot(x, y, type = &quot;l&quot;, lty = 1:5, col=rainbow(30), lwd = 2) dotchar(x) x为数据框，点图(逐行逐列累加图) dotchart(x, labels = NULL, groups = NULL, gdata = NULL,cex = par(&quot;cex&quot;), pt.cex = cex,pch = 21, gpch = 21, bg = par(&quot;bg&quot;),color = par(&quot;fg&quot;), gcolor = par(&quot;fg&quot;),lcolor = &quot;gray&quot;,xlim = range(x[is.finite(x)]), main = NULL, xlab = NULL, ylab = NULL, ...) 具体可参见： https://blog.csdn.net/moxigandashu/article/details/53383041 12345678910111213141516171819202122232425262728## 例1dotchart(VADeaths, main = &quot;Death Rates in Virginia - 1940&quot;)op &lt;- par(xaxs = &quot;i&quot;) # 0 -- 100%dotchart(t(VADeaths), xlim = c(0,100), main = &quot;Death Rates in Virginia - 1940&quot;)par(op)## 例2 dotchart(mtcars$mpg,labels = row.names(mtcars),cex= .7, main = &quot;Gas Mileage for Car Models&quot;, xlab = &quot;Miles Per gallon&quot;)x &lt;- mtcars[order(mtcars$mpg),] #按照mpg排序x$cyl &lt;-factor(x$cyl) #将cyl变成因子数据结构类型x$color[x$cyl==4] &lt;-&quot;red&quot; #新建一个color变量，油缸数cyl不同，颜色不同x$color[x$cyl==6] &lt;-&quot;blue&quot;x$color[x$cyl==8] &lt;-&quot;darkgreen&quot;dotchart(x$mpg, #数据对象 labels = row.names(x), #标签 cex = .7,#字体大小 groups = x$cyl, #按照cyl分组 gcolor = &quot;black&quot;, #分组颜色 color = x$color, #数据点颜色 pch = 19,#点类型 main = &quot;Gas Mileage for car modes \\n grouped by cylinder&quot;, #标题 xlab = &quot;miles per gallon&quot;) #x轴标签 pairs(x) 1234## 基础用法pairs(iris[1:4], main = &quot;Anderson&#x27;s Iris Data -- 3 species&quot;, pch = 21, bg = c(&quot;red&quot;, &quot;green3&quot;, &quot;blue&quot;)[unclass(iris$Species)]) 直方图 hist(x, ...) 12345678910111213141516171819202122232425262728par (mfrow = c(2,2)) # 设置四幅图片一起显示hist(mtcars$mpg) # 基本直方图hist(mtcars$mpg, breaks = 12, # 指定组数 col= &quot;red&quot;, # 指定颜色 xlab = &quot;Miles per Gallon&quot;, main = &quot;colored histogram with 12 bins&quot;)hist(mtcars$mpg, freq = FALSE, # 表示不按照频数绘图 breaks = 12, col = &quot;red&quot;, xlab = &quot;Miles per Gallon&quot;, main = &quot;Histogram,rug plot,density curve&quot;)rug(jitter(mtcars$mpg)) # 添加轴须图lines(density(mtcars$mpg),col= &quot;blue&quot;,lwd=2) #添加密度曲线x &lt;-mtcars$mpgh &lt;-hist(x,breaks = 12, col = &quot;red&quot;, xlab = &quot;Miles per Gallon&quot;, main = &quot;Histogram with normal and box&quot;)xfit &lt;- seq(min(x),max(x),length=40)yfit &lt;-dnorm(xfit,mean = mean(x),sd=sd(x))yfit &lt;- yfit *diff(h$mids[1:2])*length(x)lines(xfit,yfit,col=&quot;blue&quot;,lwd=2) # 添加正态分布密度曲线box() # 添加方框 条形图 barplot() 123456789101112library(vcd)counts &lt;- table(Arthritis$Improved) ## 引入vcd包只是想要Arthritis中的数据barplot(counts,main = &quot;bar plot&quot;,xlab = &quot;improved&quot;,ylab = &quot;counts&quot;)barplot(counts,main = &quot; horizontal bar plot&quot;, xlab = &quot;frequency&quot;, ylab = &quot;improved&quot;, horiz = TRUE) ## horizon值默认是FALSE，为TRUE的时候表示图形变为水平的 星图 stars() stars(x,full=TRUE,scale=TRUE,key.loc=NULL,draw.segments=FALSE,…) 参数x是矩阵或者是数据框，按照矩阵的行变量进行绘制。对每个标准量单独标准化之后绘制星图。draw.segments=TRUE制定画出弧形 1234567891011121314151617181920212223x &lt;- c(-1.9,-12.7,5.7,6.6,0.3,4.2,15.8,18.5,7.8,10.8, -0.9,-8.1,5.6,6.5,3.9,5.81,7.3,20.5,9.0,13.2, 8.0,0.5,11.1,12.7,11.5,12.8,17.9,21.8,13.3,15.9, 13.5,8.0,16.6,19.3,17.1,19.0,23.6,26.7,19.2,18.0, 20.4,18.3,20.8,22.7,21.8,23.9,25.3,28.3,22.9,18.0, 25.9,21.6,25.6,26.0,27.8,28.4,27.8,29.4,25.4,20.4, 25.9,24.2,29.4,30.0,27.1,30.2,29.8,30.0,31.0,21.3, 26.4,24.3,30.2,30.0,26.1,29.7,29.4,28.5,32.4,20.6, 21.8,17.5,23.9,24.3,21.2,24.0,27.0,27.4,24.8,18.3, 16.1,11.6,22.1,22.1,19.0,21.0,26.4,27.1,20.6,16.9, 6.7,0.8,15.7,15.0,10.8,14.0,21.9,25.3,14.6,13.2, 1.0,6.7,8.2,8.1,3.0,6.8,16.0,20.8,9.4,9.8)x &lt;- matrix(x, ncol = 10, nrow = 12, byrow = T)cnames &lt;- c(&quot;北京&quot;,&quot;沈阳&quot;,&quot;上海&quot;,&quot;南昌&quot;,&quot;郑州&quot;,&quot;武汉&quot;,&quot;广州&quot;,&quot;海口&quot;,&quot;重庆&quot;,&quot;昆明&quot;)rnames &lt;- paste0(1:12,&quot;月&quot;,seq=&quot;&quot;)colnames(x) &lt;- cnamesrownames(x) &lt;- rnamesstars(x)stars(x,key.loc=c(10,2,4),cex=0.8)stars(t(x),full=FALSE,draw.segments=TRUE,key.loc=c(10,3,5),cex=0.8) 绘图选项 add=FALSE :若为TRUE则叠加一个图形在前一个图上(注意坐标系的位置和尺度可能不一样) axes=TRUE :若为FALSE则不绘制轴和边框 type=&quot;p&quot; :制定图形类型(plot)，“P”：点、“l”：线、“b”：点连线、“o”：点连线，线在点上、“h”：垂直线、“s”：阶梯式，垂直线顶端显示数据、“S”：阶梯式，垂直线低端显示数据 xlim=,ylim=:指定轴的上下限 xlab=,ylab=:坐标轴标签，必须为字符型值 main=:主标题，字符型值 sub: 副标题(小字体)","categories":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/categories/R/"},{"name":"学习笔记","slug":"R/学习笔记","permalink":"https://www.hermitlsr.top/categories/R/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/tags/R/"},{"name":"绘图","slug":"绘图","permalink":"https://www.hermitlsr.top/tags/%E7%BB%98%E5%9B%BE/"}]},{"title":"R语言的久远学习笔记--概率分布","slug":"Long-term-study-notes-of-R-2021-06-23-R语言的久远学习笔记-概率分布","date":"2021-06-23T03:53:30.000Z","updated":"2021-07-13T04:53:06.880Z","comments":false,"path":"2021-06-23/f8ed4dd0.html","link":"","permalink":"https://www.hermitlsr.top/2021-06-23/f8ed4dd0.html","excerpt":"这是曾经R语言软件课程的简单笔记的概率函数部分，整理至此。","text":"这是曾经R语言软件课程的简单笔记的概率函数部分，整理至此。 随机抽样 sample(x, size, replace = FALSE, prob = NULL) 1sample(c(&quot;成功&quot;, &quot;失败&quot;), 10, replace = T, prob = c(0.9, 0.1)) 排列组合与概率的计算 prod() 返回连乘积 choose() 返回取法的数目 121/prod(52:49)1/choose(52,49) 部分概率分布 二项分布：binom(n,p) 分布律： f(x∣n,p)=(nx)px(1−p)n−xf(x|n,p)=\\begin{pmatrix}n\\\\x\\end{pmatrix}p^x(1-p)^{n-x} f(x∣n,p)=(nx​)px(1−p)n−x 数字特征：E(X)=np,var(X)=np(1−p)E(X)=np,var(X)=np(1-p)E(X)=np,var(X)=np(1−p) dbinom(x, size, prob, log = FALSE) pbinom(q, size, prob, lower.tail = TRUE, log.p = FALSE) qbinom(p, size, prob, lower.tail = TRUE, log.p = FALSE) rbinom(n, size, prob) 正态分布：norm(μ\\muμ,σ2\\sigma^2σ2) 密度函数： f(x∣μ,σ)=12πσe(x−μ)22σ2f(x|\\mu,\\sigma)=\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{\\frac{(x-\\mu)^2}{2\\sigma^2}} f(x∣μ,σ)=2π​σ1​e2σ2(x−μ)2​ 数字特征：E(X)=μ,var(X)=σ2E(X)=\\mu,var(X)=\\sigma^2E(X)=μ,var(X)=σ2 dnorm(x, mean = 0, sd = 1, log = FALSE) pnorm(q, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) qnorm(p, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE) rnorm(n, mean = 0, sd = 1) 泊松分布：pois(λ\\lambdaλ) 分布律： f(x∣λ)=λxx!e−λf(x|\\lambda)=\\frac{\\lambda^x}{x!}e^{-\\lambda} f(x∣λ)=x!λx​e−λ 数字特征：$$E(X)=\\lambda,var(X)=\\lambda$$ dpois(x, lambda, log = FALSE) ppois(q, lambda, lower.tail = TRUE, log.p = FALSE) qpois(p, lambda, lower.tail = TRUE, log.p = FALSE) rpois(n, lambda) 均匀分布：unif(a,b) 密度函数： f(x∣a,b)=1b−af(x|a,b)=\\frac{1}{b-a} f(x∣a,b)=b−a1​ 数字特征：E(X)=a+b2,var(X)=b2−a212E(X)=\\frac{a+b}{2},var(X)=\\frac{b^2-a^2}{12}E(X)=2a+b​,var(X)=12b2−a2​ dunif(x, min = 0, max = 1, log = FALSE) punif(q, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE) qunif(p, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE) runif(n, min = 0, max = 1) 12345require(DAAG)data(possum)fpossum &lt;- possum[possum$sex==&quot;f&quot;, ]var(fpossum$totlngth)mad(fpossum$totlngth)^2","categories":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/categories/R/"},{"name":"学习笔记","slug":"R/学习笔记","permalink":"https://www.hermitlsr.top/categories/R/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/tags/R/"},{"name":"概率分布","slug":"概率分布","permalink":"https://www.hermitlsr.top/tags/%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83/"}]},{"title":"Hexo 文章永久链接设置","slug":"Hexo 文章永久链接设置","date":"2021-06-22T15:51:12.000Z","updated":"2021-07-13T04:49:06.730Z","comments":false,"path":"2021-06-22/e83798a9.html","link":"","permalink":"https://www.hermitlsr.top/2021-06-22/e83798a9.html","excerpt":"在使用Hexo写博客时，使用中文博客标题生成的永久链接是冗长且无意义的，这不利于进行SEO，且不易读。一个好的永久链接应该体现文章内容，本文介绍在Hexo中如何自定义永久链接。 urlname: Hexo-wzyjljsz","text":"在使用Hexo写博客时，使用中文博客标题生成的永久链接是冗长且无意义的，这不利于进行SEO，且不易读。一个好的永久链接应该体现文章内容，本文介绍在Hexo中如何自定义永久链接。 urlname: Hexo-wzyjljsz 永久链接介绍 永久链接是什么Hexo官方介绍： 维基百科的定义 固定链接（PermaLink，Permanent Link的缩写）或称“永久链接”或“静态链接”，意指向一个特定网络日志（WebLog，Blog）的永久固定标识符。一般情况下，固定链接指向的均为一个网络日志条目（Entry）的独立网页。默认存档设置包含基于数据库的存档和单独文件存档。默认情况下，固定链接被设置为链接到一个条目的单独存档页面中。你可以在网络日志的下方，或者在“发布时间”之后，看到 Permalink。点击 Permalink 将会把访问者导向到专属于该条目 (Entry) 的独立网页中，一般包含“添加评论”等功能。如果可能的话，一般的静态链接会尽量使得网址本身是有意义（人类可读）的，例如网址本身就含有该篇博客的标题。然而由于Unicode在网址需要特殊编码，因此非英文的语言比较难做到这点。 最初作用 永久链接最初主要是为了做搜索引擎优化(SEO)，因为搜索引擎的机器人对静态的URL有偏好，所以对于动态生成的页面，人们想出了这么个办法来使其假扮成一个静态的页面，以便让搜索引擎更好的索引网站内容;另外一个初衷是增加URL地址的可读性。 简单来讲，永久链接是网页的完整网址 (url) ，这个网址永远不会改变的。一般而言，希望这个网址是有意义的 (人类可读)，例如网址中含有的博客标题。但是使用非英文语言作为标题会导致生成的永久链接是不可读的冗长的编码内容。Hexo默认使用博客文章标题作为永久链接，这就需要我们重新定义永久链接中的非英文语言部分。 基本设置 设置步骤： 修改博客根目录中站点设置文件 _config.yml 修改发布文章模板 ...\\scaffolds\\post.md 修改博客根目录中站点设置文件 12345678# URL## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;url: https://hermitlsr.toppermalink:year/:month/:day/:title/permalink_defaults:pretty_urls: trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks Hexo默认的永久链接格式是：permalink:year/:month/:day/:title/ ， 例如本篇文章如果按照原始格式，其永久链接将是：https://hermitlsr.top/2021/06/22/Hexo%20%E6%96%87%E7%AB%A0%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5%E8%AE%BE%E7%BD%AE/ 将在浏览器地址中显示： https://hermitlsr.top/2021/06/22/Hexo%20文章永久链接设置/ 事实上如若复制浏览器中的地址得到的还是上面冗长的编码的，浏览器地址中的显示是编码过的。另外，默认格式中的日期格式是递进的关系，我个人认为层次太多，可以直接设置为 /2021-06-22/ 的形式，当然你也可以根据自己的需求进行设定删减。为此可以做如下更改： 12345678# URL## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;url: https://hermitlsr.toppermalink: :year-:month-:day/:urlname/ # :year/:month/:day/:title/permalink_defaults:pretty_urls: trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks 将永久链接的格式设置为：permalink: :year-:month-:day/:urlname/ ，其中 urlname 是自定义的文章地址，可以和文章标题不一致。在下采用的方式是使用文章标题拼音首字母代替原有的部分，这可以根据个人喜好习惯自行设置。 修改发布文章模板 前面提到的 urlname 需要设置在文章开头的 front-matter 中，在 Volantis 主题中的详情参数可见 Volantis front-matter，如： 1234567---title: Hexo 文章永久链接设置mathjax: trueurlname: Hexo-wzyjljszdate: 2021-06-22 23:51:12tags:--- 这里将 urlname 设置为 Hexo-wzyjljsz ，此时的永久链接就变成了：https://hermitlsr.top/2021-06-22/Hexo-wzyjljsz/ ，非常清爽明了。 自定义永久链接的设置在这里基本完成了。如果不想每次写博文时都要再输入一遍 urlname: 需要修改发布文章的模板 (post)，对于草稿 (draft) 可一样处理。 在站点文件中找到 ...\\scaffolds\\post.md 文件，在其中设置： 123456789101112---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;urlname:mathjax: truecover: truecomments: falsethumbnail: trueheadimg: tags:categories:--- 在下因为文章基本都要进行公式渲染，所以还在这里设置了 mathjax: true ，具体需要设置的内容可根据自身需求而定。 更多修改 使用 hexo new post &quot; &quot; 新建文章的时候，默认文章命名不方便日后的文章查找整理，这里一并进行设置，最后的格式是这样的：2021-06-22--Hexo 文章永久链接设置.md ，加上文章前缀之后更便于管理。 这里只需要设置博客根目录站点设置文件 _config.yml 中 new_post_name 即可： 123new_post_name: :year-:month-:day--:title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecase","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.hermitlsr.top/categories/Hexo/"},{"name":"写作技巧","slug":"Hexo/写作技巧","permalink":"https://www.hermitlsr.top/categories/Hexo/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.hermitlsr.top/tags/Hexo/"}]},{"title":"时序分析-确定性趋势参数估计","slug":"时序分析-确定性趋势参数估计","date":"2021-06-22T09:38:44.000Z","updated":"2021-07-13T04:04:35.972Z","comments":false,"path":"2021-06-22/2abc08a6.html","link":"","permalink":"https://www.hermitlsr.top/2021-06-22/2abc08a6.html","excerpt":"学习《时间序列分析及应用·Jonathan D.Cryer &amp; Kung-Sik Chan 著》一书时的相关笔记——对于确定性趋势的参数估计，大致有五种：常均值模型、线性模型、二次式模型、季节均值模型、余弦模型。虽然每种模型各有特点和要求，但对于参数求解，一般都是使用OLSE。其区别仅在与设计矩阵的构造。本文将介绍这五种模型参数估计的R语言自编程序的实现。","text":"学习《时间序列分析及应用·Jonathan D.Cryer &amp; Kung-Sik Chan 著》一书时的相关笔记——对于确定性趋势的参数估计，大致有五种：常均值模型、线性模型、二次式模型、季节均值模型、余弦模型。虽然每种模型各有特点和要求，但对于参数求解，一般都是使用OLSE。其区别仅在与设计矩阵的构造。本文将介绍这五种模型参数估计的R语言自编程序的实现。 常均值模型 参数估计的R语言函数 常均值模型为：$$Y_t=\\mu+X_t$$ 其中对所有的 ttt 有 E(X)=0E(X)=0E(X)=0。使用观测到的时间序列 Y1,Y2,…,YnY_1,Y_2,…,Y_nY1​,Y2​,…,Yn​ 来估计μ\\muμ 。则可由OLSEOLSEOLSE得出μ\\muμ的估计为样本均值或平均数，定义为$$\\bar{Y}=\\frac{1}{n}\\sum_{t=1}^n Y_t$$在模型假设成立的前提下，可以看出E(Yˉ)=μE(\\bar{Y})=\\muE(Yˉ)=μ，基于此常均值模型的参数估计算法函数ConReg()如下: 123456ConReg &lt;- function(Y)&#123; mu = sum(Y) / length(Y) out = list(Y=Y, mu=mu)&#125; 参数估计的R语言函数检验 由于课本并未给出相关数据，下面人为生成一组数据进行验证，做法如下：令模型中的μ=2\\mu=2μ=2，Xt∼N(0,1)X_t\\sim N(0,1)Xt​∼N(0,1)，通过模型生成一组Yt,t=1,…,100Y_t,t=1,…,100Yt​,t=1,…,100,以此使用上述函数ConReg()估计μ\\muμ的值，比较真实的μ=2\\mu=2μ=2，判断算法的正确性。代码如下： 123456set.seed(1)mu = 2X &lt;- rnorm(100,0,1)Y &lt;- mu + X + rnorm(100, 0, .2)muest &lt;- ConReg(Y)muest$mu 可以计算得估计μ=2.101\\mu=2.101μ=2.101，与真实值相差不大，可以认为函数ConReg()是合理的。 线性模型 参数估计的R语言函数 对于线性模型$$\\mu_t=\\beta_0+\\beta_1t+\\beta_2t+…+\\beta_nt$$ 类似的可通过OLSEOLSEOLSE，计算得起参数估计β\\betaβ应该为：$$\\beta=(X’X)^{-1}XY$$基于此给出线性模型参数估计的模型LinReg()代码如下： 12345678910111213141516171819202122232425LinReg &lt;- function(X, y, lambda = 0, intercept = T)&#123; n = dim(X)[1] p = dim(X)[2] #Coefficients if(intercept == T)&#123; X. = cbind(rep(1,n), X) &#125;else&#123; X. = X &#125; beta = solve(t(X.)%*%X. + lambda*diag(dim(X.)[2]), t(X.)%*%y) if (intercept == T)&#123; beta1 = beta[2:(p+1)] beta0 = beta[1] &#125;else&#123; beta1 = beta beta0 =NULL &#125; out = list(X=X, y=y, beta=beta1, beta0 = beta0, intercept = intercept )&#125; 参数估计的R语言函数检验 类似于常均值模型，人为产生数据进行验证，代码如下： 123456789101112n &lt;- 100p &lt;- 6set.seed(1)X &lt;- matrix(rnorm(n*p), n, p)beta = c(3, 1, rep(0,p-2))beta0 = 0set.seed(1)y = X%*%beta + beta0 + rnorm(100, 0, .2)result &lt;- LinReg(X, y)result$betaresult$beta0 可以看出估计的参数β^\\hat\\betaβ^​与真实值非常接近，认为该函数没有问题。 二次模型 参数估计的R语言函数 对于二次模型我们可以将其转化为线性模型进行参数估计，一般的二次模型如下：$$\\mu_t=\\beta_0+\\beta_1t^2$$我们可以令X0=1,X1=t2X_0=1,X_1=t^2X0​=1,X1​=t2，这样将其转为，设计矩阵为X=(X0X1)X=(\\begin{matrix}X_0&amp;X_1 \\end{matrix})X=(X0​​X1​​)的线性模型，为方便以后的函数调用，在设计R语言函数时推广为多项式模型，代码如下： 123456789101112PolyDes &lt;- function(t)&#123; n &lt;- length(t[, 1]) p &lt;- length(t[1, ]) X &lt;- matrix(nrow = n, ncol = p) for (i in 1:p) &#123; X[, i] &lt;- t[, i]^i &#125; out = X &#125; 参数估计的R语言函数检验 函数PolyDes()仅给出多项式模型的设计矩阵，要求其参数估计可再次调用线性模型函数LinRes()。以下给出模型的验证： 123456789101112131415161718beta &lt;- c(5, 4, 3, 2, 1)beta0 &lt;- 0t &lt;- matrix(nrow = 100, ncol = 5)set.seed(1)r &lt;- matrix(rnorm(100*5), 100, 5)for (i in 1:5) &#123; t[, i] = 6-i + r[, i]&#125;y = beta0 + t[,1]*beta[1] + t[,2]^2*beta[2] + t[,3]^3*beta[3] + t[,4]^4*beta[4] + t[,5]^5*beta[5]+rnorm(100, 0, .2)X &lt;- PolyDes(t)result &lt;- LinReg(X,y)result$betaresult$beta0 对比估计的参数和真实的参数β\\betaβ是很接近的，可以认为函数是有效的。 季节趋势模型 参数估计的R语言函数 对季节性趋势模型，其观测到的数据可表示为$$Y_t=\\mu_t+X_t$$,其中，对所有t，E(Xt)=0E(X_t)=0E(Xt​)=0。对于月度季节新数据，对μt\\mu_tμt​最常用的假设是存在12个常数（参数）β1,β2,⋯ ,β12\\beta_1,\\beta_2,\\cdots,\\beta_{12}β1​,β2​,⋯,β12​，它们给出了12个月的期望平均气温。可以记为： μ={β1t=1,13,15,…β2t=2,14,16,…⋮β12t=12,24,36,…\\mu=\\begin{cases}\\beta_1&amp;t=1,13,15,…\\\\ \\beta_2&amp;t=2,14,16,…\\\\ \\vdots \\\\ \\beta_{12}&amp;t=12,24,36,…\\end{cases} μ=⎩⎪⎪⎪⎪⎨⎪⎪⎪⎪⎧​β1​β2​⋮β12​​t=1,13,15,…t=2,14,16,…t=12,24,36,…​ 该模型有时被称为季节均值模型。 对于季节均值模型的估计，关键点在于将模型按月进行参数估计，这需要对设计矩阵XXX进行特殊处理。这里的处理是，设计矩阵XXX是大小为n×12n×12n×12的示性矩阵，n为季节性时间序列的长度。XXX的每一行就为一个示性函数，仅有唯一一个位置为1，即对于确定的iii，XijX_{ij}Xij​表示第iii个数据是第jjj月的。值得注意的是对于有截距项的模型如下： μt=β0+β2I(t%12=2)+⋯+β12I(t%12=0)\\mu_t=\\beta_0+\\beta_2I(t\\%12=2)+\\cdots+\\beta_{12}I(t\\%12=0) μt​=β0​+β2​I(t%12=2)+⋯+β12​I(t%12=0) 参考前面的线性参数进估计，季节均值模型参数估计代码如下: 12345678910111213141516171819202122232425262728293031SeaReg &lt;- function(y, intercept = F)&#123; if (!is.ts(y)) stop(&quot;y need to be a time series&quot;) n &lt;- length(y) X &lt;- matrix(ncol = 12, nrow = n) month &lt;-c(&quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;, &quot;August&quot;, &quot;September&quot;, &quot;October&quot;, &quot;November&quot;, &quot;December&quot;) month.y &lt;- as.character(season(y)) for (i in 1:n) &#123; for (j in 1:12) &#123; if(month.y[i]==month[j])&#123; X[i,j] = 1 &#125;else&#123; X[i,j] = 0 &#125; &#125; &#125; if(intercept == F)&#123; X. = X &#125;else&#123; X[, 1]=rep(1, n) X. = X &#125; beta = solve(t(X.)%*%X., t(X.)%*%y) out = list(y=y, X=X., beta=beta,intercept = intercept )&#125; 参数估计的R语言函数检验 为对季节性趋势模型函数SeaReg()进行检验，采用TSA包中的tempdub数据进行检验。代码如下： 12345678library(TSA)data(&quot;tempdub&quot;)#无截距项result1 &lt;- SeaReg(tempdub)result1$beta#有截距项result2 &lt;- SeaReg(tempdub, intercept = T)result2$beta 对比《时间序列》P24页的数据可知，有截距项和无截距项的参数估计的结果是基本一致的，故而该函数是可以接受的。 余弦趋势模型 参数估计的R语言函数 余弦趋势模型的最简单形式可表示为:$$\\mu_t=\\beta_0+\\beta_1cos(2\\pi ft)+\\beta_2sin(2\\pi ft)$$类比二项式模型可知，其可也转换为线性模型求解，只不过需要对其设计矩阵做一定的设置，代码如下： 12345678910111213CosDes &lt;- function(y, f=1)&#123; if (!is.ts(y)) stop(&quot;y need to be a time series&quot;) n = length(y) t = as.numeric(time(y)) X1 = cos(2*pi*f*t) X2 = sin(2*pi*f*t) X = cbind(X1, X2) out = X&#125; 参数估计的R语言函数检验 采用TSA包中的tempdub数据进行检验。使用默认频率f=1，代码如下： 123456library(TSA)data(&quot;tempdub&quot;)X &lt;- CosDes(tempdub, 1)result&lt;-LinReg(X,tempdub)result$betaresult$beta0 可以看到其参数估计的结果与课本P25页表3-5的数据一致，说明该函数的确可以完成余弦趋势模型的设计矩阵变换。","categories":[{"name":"时序分析","slug":"时序分析","permalink":"https://www.hermitlsr.top/categories/%E6%97%B6%E5%BA%8F%E5%88%86%E6%9E%90/"},{"name":"学习笔记","slug":"时序分析/学习笔记","permalink":"https://www.hermitlsr.top/categories/%E6%97%B6%E5%BA%8F%E5%88%86%E6%9E%90/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/tags/R/"},{"name":"时序分析","slug":"时序分析","permalink":"https://www.hermitlsr.top/tags/%E6%97%B6%E5%BA%8F%E5%88%86%E6%9E%90/"}]},{"title":"R语言的久远学习笔记--数据结构","slug":"Long-term-study-notes-of-R-2021-06-22-R语言的久远学习笔记-R语言数据结构","date":"2021-06-22T09:02:03.000Z","updated":"2021-07-13T04:49:06.714Z","comments":false,"path":"2021-06-22/75c03109.html","link":"","permalink":"https://www.hermitlsr.top/2021-06-22/75c03109.html","excerpt":"这是曾经R语言软件课程的简单笔记的数据结构部份，整理至此。","text":"这是曾经R语言软件课程的简单笔记的数据结构部份，整理至此。 所有R语言对象都有两个内在属性，类型和长度。类型是对象元素的基本种类，共有四种： 数值型——整型、单精度实型、双精度实型 字符型 复数型 逻辑型(FALSE、TRUE或NA) 常用mode()、class()、length得到类型和长度 注：mode：表示对象在内存中的存储类型 基本数据类型’atomic’ mode： numeric（Integer/double）, complex, character和logical 递归的对象（recursive object）： ‘list’ 或 ‘function’ class：是一种抽象类型，或者理解为一种数据结构 他主要是用来给泛型函数（参考java中泛型的概念）识别参数用。 对象 对象有7种：向量、因子、数组、矩阵(特殊的数组)、数据框、时间序列(ts)、列表 基本运算中：xor()异或函数：a⊕b = (¬a ∧ b) ∨ (a ∧¬b) 逻辑运算 浏览对象的信息 ls()返回环境中的对象名称，参数pattern指定含有某个字母，^指定首字母：ls(pat=&quot;^m&quot;) ls.str() 显示内存中所有对象的详细情况，max.level=-1避免结果过长 向量 seq(from = , to = , by = ((to - from)/(length.out - 1)),length.out = NULL) 12seq(from = 2, to = 5, by = 0.5)seq(from = 2, to = 5, length.out = 7) rep(x, times = 1, length.out = NA, each = 1) times x重复的次数；each x中每一个元素重复的次数 1234rep(2:5, times = 2)rep(2:5, each = 2)rep(2:5, times = 2, each = 2)rep(2:5, c(2,3,4,5)) # 2:5 中的每个元素按c(2,3,4,5)重复 sequence() 123sequence(5:10)sequence(10:5)sequence(c(3,2,4)) 字符 paste (..., sep = &quot; &quot;, collapse = NULL) 12paste(c(&quot;X&quot;, &quot;Y&quot;), 1:10, sep = &quot;&quot;)paste(c(&quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;), 1:5, sep = &quot;&quot;) 因子 factor(x = character(), levels, labels = levels, ordered = is.ordered(x) ) 12345factor(x = LETTERS[1:3], levels = c(&quot;C&quot;, &quot;A&quot;, &quot;B&quot;))factor(x = LETTERS[1:3], labels = 1:3)factor(x = LETTERS[1:3], labels = c(3, 2, 1))factor(x = LETTERS[1:3], levels = c(&quot;C&quot;, &quot;A&quot;, &quot;B&quot;), labels = c(3, 2, 1)) gl(n, k, length = n*k, labels = seq_len(n), ordered = FALSE) 12gl(2, 3, labels = seq(2))gl(2, 3, length = 10, labels = seq(3)) 数组和矩阵 array(data, dim, dimnames) 123456789101112131415161718192021# Create two vectors of different lengths.vector1 &lt;- c(5,9,3)vector2 &lt;- c(10,11,12,13,14,15)column.names &lt;- c(&quot;COL1&quot;,&quot;COL2&quot;,&quot;COL3&quot;)column.names &lt;- paste0(&quot;COL&quot;, seq(3))row.names &lt;- c(&quot;ROW1&quot;,&quot;ROW2&quot;,&quot;ROW3&quot;)matrix.names &lt;- c(&quot;Matrix1&quot;,&quot;Matrix2&quot;)# Take these vectors as input to the array.result &lt;- array(c(vector1,vector2),dim = c(3,3,2),dimnames = list(row.names, column.names, matrix.names))# Print the third row of the second matrix of the array.print(result[3,,2])# Print the element in the 1st row and 3rd column of the 1st matrix.print(result[1,3,1])# Print the 2nd Matrix.print(result[,,2]) 对矩阵运算 apply()、sweep函数 1234567891011A &lt;- matrix(seq(9), ncol=3)B &lt;- matrix(4:15, ncol=3)C &lt;- matrix(rep(c(8,9,10),2), ncol=2)# Create a list of matricesMyList &lt;- list(A,B,C)# Extract the 2nd column from `MyList` with the selection operator `[` with `lapply()`lapply(MyList,&quot;[&quot;, , 2)# Extract the 1st row from `MyList`lapply(MyList,&quot;[&quot;, 1, ) 数据切片sweep 123456789101112131415161718192021# NOT RUN &#123;require(stats) # for medianmed.att &lt;- apply(attitude, 2, median)sweep(data.matrix(attitude), 2, med.att) # subtract the column medians## More sweeping:A &lt;- array(1:24, dim = 4:2)## no warnings in normal usesweep(A, 1, 5);sweep(A, 2, 5)(A.min &lt;- apply(A, 1, min)) # == 1:4sweep(A, 1, A.min)sweep(A, 1:2, apply(A, 1:2, median))## warnings when mismatchsweep(A, 1, 1:3) # STATS does not recyclesweep(A, 1, 6:1) # STATS is longer## exact recycling:sweep(A, 1, 1:2) # no warningsweep(A, 1, as.array(1:2)) # warning# &#125; 数据框 data.fram() 注意函数rownames()、colnames()、attach()、with 12345attach(Puromycin)xtabs(~state + conc, data = Puromycin)summary(Puromycin)pairs(Puromycin, panel = panel.smooth) 列表 略 时间序列 ts(data = NA, start = 1, end = numeric(), frequency = 1,deltat = 1, ts.eps = getOption(&quot;ts.eps&quot;), class = , names = ) 123456A &lt;- ts(1:10, start = 1959)ts(1:47, frequency = 12, start = c(1959, 2))ts(1:47, frequency = 4, start = c(1959, 2))ts(matrix(rpois(36, 5), 12, 3), start = c(1961,1),frequency = 12)ts(matrix(rpois(36, 5)), start = c(1961,1),frequency = 12) 常用的统计函数 mad() 中位绝对离差 MAD=median(∣Xi−median(X)∣) 鲁棒性 具体可参见：https://blog.csdn.net/horses/article/details/78749485 中位数、方差、标准差、范围、四分位数极差、分位数 1234567x &lt;- seq(10)sd(x)var(x)sd(x)range(x)IQR(x)quantile(x) 累乘、累和（结果） 123x &lt;- seq(5)prod(x)sum(x) 累和、累积、累小、累大（每一个） 123456x &lt;- seq(5)y &lt;- c(3, 5, 2, 6, 1, 7)cumsum(x)cumprod(x)cummax(y)cummin(y) 排序 rev()、sort()、order()、rank() 12345678(x &lt;- sample(seq(20),5,replace = F))rev(x) # 逆序sort(x) # 按从小到大顺序rank(x) # 排序后的顺序order(x) # 排序后所放元素在之前的位置x[order(x)]sort(x)[rank(x)] 一个技巧 这是一个乱入的技巧，记得使用R语言做机器学习的时候用到的。 123?substitutedeparse(substitute(series))?deparse #将表达式转换为字符串","categories":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/categories/R/"},{"name":"学习笔记","slug":"R/学习笔记","permalink":"https://www.hermitlsr.top/categories/R/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/tags/R/"}]}],"categories":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/categories/R/"},{"name":"学习笔记","slug":"R/学习笔记","permalink":"https://www.hermitlsr.top/categories/R/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"Hexo","slug":"Hexo","permalink":"https://www.hermitlsr.top/categories/Hexo/"},{"name":"建站","slug":"Hexo/建站","permalink":"https://www.hermitlsr.top/categories/Hexo/%E5%BB%BA%E7%AB%99/"},{"name":"时序分析","slug":"时序分析","permalink":"https://www.hermitlsr.top/categories/%E6%97%B6%E5%BA%8F%E5%88%86%E6%9E%90/"},{"name":"学习笔记","slug":"时序分析/学习笔记","permalink":"https://www.hermitlsr.top/categories/%E6%97%B6%E5%BA%8F%E5%88%86%E6%9E%90/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"写作技巧","slug":"Hexo/写作技巧","permalink":"https://www.hermitlsr.top/categories/Hexo/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"R","slug":"R","permalink":"https://www.hermitlsr.top/tags/R/"},{"name":"参数估计","slug":"参数估计","permalink":"https://www.hermitlsr.top/tags/%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/"},{"name":"Hexo","slug":"Hexo","permalink":"https://www.hermitlsr.top/tags/Hexo/"},{"name":"Volantis","slug":"Volantis","permalink":"https://www.hermitlsr.top/tags/Volantis/"},{"name":"时序分析","slug":"时序分析","permalink":"https://www.hermitlsr.top/tags/%E6%97%B6%E5%BA%8F%E5%88%86%E6%9E%90/"},{"name":"ARMA","slug":"ARMA","permalink":"https://www.hermitlsr.top/tags/ARMA/"},{"name":"绘图","slug":"绘图","permalink":"https://www.hermitlsr.top/tags/%E7%BB%98%E5%9B%BE/"},{"name":"概率分布","slug":"概率分布","permalink":"https://www.hermitlsr.top/tags/%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83/"}]}